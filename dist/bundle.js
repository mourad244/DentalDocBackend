(()=>{var e={2987:(e,t,n)=>{n(5124);const a=n(7252),s=n(8944),i=n(6726);n(818).config();const o=a();o.use("/images",a.static("./images")),n(4079)(o),n(8055)(),n(2227)(),n(2970)(),n(1895)(o);const r={GJS_DEBUG_TOPICS:"JS ERROR;JS LOG",LESSOPEN:"| /usr/bin/lesspipe %s",USER:"mourad",LC_TIME:"ar_MA.UTF-8",npm_config_user_agent:"npm/10.2.4 node/v20.11.0 linux x64 workspaces/false",XDG_SESSION_TYPE:"wayland",GIT_ASKPASS:"/usr/share/code/resources/app/extensions/git/dist/askpass.sh",npm_node_execpath:"/home/mourad/.nvm/versions/node/v20.11.0/bin/node",SHLVL:"1",npm_config_noproxy:"",HOME:"/home/mourad",CHROME_DESKTOP:"code-url-handler.desktop",TERM_PROGRAM_VERSION:"1.89.0",DESKTOP_SESSION:"ubuntu",NVM_BIN:"/home/mourad/.nvm/versions/node/v20.11.0/bin",npm_package_json:"/home/mourad/git_workspace/DentalDocBackend/package.json",NVM_INC:"/home/mourad/.nvm/versions/node/v20.11.0/include/node",GIO_LAUNCHED_DESKTOP_FILE:"/usr/share/applications/code.desktop",GNOME_SHELL_SESSION_MODE:"ubuntu",GTK_MODULES:"gail:atk-bridge",VSCODE_GIT_ASKPASS_MAIN:"/usr/share/code/resources/app/extensions/git/dist/askpass-main.js",LC_MONETARY:"ar_MA.UTF-8",VSCODE_GIT_ASKPASS_NODE:"/usr/share/code/code",MANAGERPID:"1574",npm_config_userconfig:"/home/mourad/.npmrc",npm_config_local_prefix:"/home/mourad/git_workspace/DentalDocBackend",SYSTEMD_EXEC_PID:"1750",IM_CONFIG_CHECK_ENV:"1",DBUS_SESSION_BUS_ADDRESS:"unix:path=/run/user/1000/bus",COLORTERM:"truecolor",GIO_LAUNCHED_DESKTOP_FILE_PID:"7254",COLOR:"1",NVM_DIR:"/home/mourad/.nvm",IM_CONFIG_PHASE:"1",WAYLAND_DISPLAY:"wayland-0",LOGNAME:"mourad",JOURNAL_STREAM:"8:32949",_:"/home/mourad/.nvm/versions/node/v20.11.0/bin/npm",npm_config_prefix:"/home/mourad/.nvm/versions/node/v20.11.0",npm_config_npm_version:"10.2.4",XDG_SESSION_CLASS:"user",USERNAME:"mourad",TERM:"xterm-256color",npm_config_cache:"/home/mourad/.npm",GNOME_DESKTOP_SESSION_ID:"this-is-deprecated",npm_config_node_gyp:"/home/mourad/.nvm/versions/node/v20.11.0/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js",PATH:"/home/mourad/git_workspace/DentalDocBackend/node_modules/.bin:/home/mourad/git_workspace/node_modules/.bin:/home/mourad/node_modules/.bin:/home/node_modules/.bin:/node_modules/.bin:/home/mourad/.nvm/versions/node/v20.11.0/lib/node_modules/npm/node_modules/@npmcli/run-script/lib/node-gyp-bin:/home/mourad/.nvm/versions/node/v20.11.0/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin",SESSION_MANAGER:"local/mourad-hp:@/tmp/.ICE-unix/1722,unix/mourad-hp:/tmp/.ICE-unix/1722",INVOCATION_ID:"711ec269c94e415a9e00e5d4298e5b13",NODE:"/home/mourad/.nvm/versions/node/v20.11.0/bin/node",npm_package_name:"dental-doc-backend",XDG_MENU_PREFIX:"gnome-",LC_ADDRESS:"ar_MA.UTF-8",GNOME_SETUP_DISPLAY:":1",XDG_RUNTIME_DIR:"/run/user/1000",GDK_BACKEND:"x11",DISPLAY:":0",LANG:"en_US.UTF-8",XDG_CURRENT_DESKTOP:"Unity",LC_TELEPHONE:"ar_MA.UTF-8",XMODIFIERS:"@im=ibus",XDG_SESSION_DESKTOP:"ubuntu",XAUTHORITY:"/run/user/1000/.mutter-Xwaylandauth.MFYIN2",LS_COLORS:"rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:",VSCODE_GIT_IPC_HANDLE:"/run/user/1000/vscode-git-52882dd7fd.sock",TERM_PROGRAM:"vscode",npm_lifecycle_script:"webpack --mode production",SSH_AGENT_LAUNCHER:"gnome-keyring",SSH_AUTH_SOCK:"/run/user/1000/keyring/ssh",ORIGINAL_XDG_CURRENT_DESKTOP:"ubuntu:GNOME",SHELL:"/bin/bash",LC_NAME:"ar_MA.UTF-8",npm_package_version:"1.0.0",npm_lifecycle_event:"build",QT_ACCESSIBILITY:"1",GDMSESSION:"ubuntu",LESSCLOSE:"/usr/bin/lesspipe %s %s",LC_MEASUREMENT:"ar_MA.UTF-8",GJS_DEBUG_OUTPUT:"stderr",LC_IDENTIFICATION:"ar_MA.UTF-8",VSCODE_GIT_ASKPASS_EXTRA_ARGS:"",QT_IM_MODULE:"ibus",npm_config_globalconfig:"/home/mourad/.nvm/versions/node/v20.11.0/etc/npmrc",npm_config_init_module:"/home/mourad/.npm-init.js",PWD:"/home/mourad/git_workspace/DentalDocBackend",npm_execpath:"/home/mourad/.nvm/versions/node/v20.11.0/lib/node_modules/npm/bin/npm-cli.js",XDG_CONFIG_DIRS:"/etc/xdg/xdg-ubuntu:/etc/xdg",NVM_CD_FLAGS:"",XDG_DATA_DIRS:"/usr/share/ubuntu:/home/mourad/.local/share/flatpak/exports/share:/var/lib/flatpak/exports/share:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop",npm_config_global_prefix:"/home/mourad/.nvm/versions/node/v20.11.0",LC_NUMERIC:"ar_MA.UTF-8",npm_command:"run-script",LC_PAPER:"ar_MA.UTF-8",INIT_CWD:"/home/mourad/git_workspace/DentalDocBackend",EDITOR:"vi"}.PORT||i.get("port"),d=o.listen(r,(()=>s.info(`Listening on port ${r}...`)));e.exports=d},1987:(e,t,n)=>{const a=n(6726);e.exports=function(e,t,n){return a.get("requiresAuth")?e.user.isAdmin?void n():t.status(403).send("Access denied."):n()}},4276:(e,t,n)=>{const a=n(829),s=n(6726);e.exports=function(e,t,n){if(!s.get("requiresAuth"))return n();const i=e.header("x-auth-token");if(!i)return t.status(401).send("Access denied. No token provided.");try{const t=a.verify(i,s.get("jwtPrivateKey"));e.user=t,n()}catch(e){t.status(400).send("Invalid token.")}}},9819:(e,t,n)=>{const a=n(9896);e.exports=deleteImages=e=>{if(!Array.isArray(e))if("string"==typeof e)try{a.unlinkSync(e)}catch(e){return e}else for(let t in e)e[t].map((e=>{try{a.unlinkSync(e.path)}catch(e){return e}}));Array.isArray(e)&&e.map((e=>{try{a.unlinkSync(e)}catch(e){return e}}))}},4342:(e,t,n)=>{const a=n(9896);e.exports=deleteIndexedImages=(e,t)=>{t.map((t=>{try{a.unlinkSync(e[t])}catch(e){return e}}))}},1962:(e,t,n)=>{const a=n(5124);e.exports=function(e,t,n,s){a.error(e.message,e),n.status(500).send("Something failed.")}},8967:e=>{e.exports=getPathData=e=>{let t={};for(let n in e)t[n]=e[n];return t}},5049:(e,t,n)=>{const a=n(2460),s=n(6928),i=n(8461);var o=i.diskStorage({destination:(e,t,n)=>{n(null,"images")},filename:(e,t,n)=>{n(null,Date.now()+"-"+Math.round(100*Math.random())+s.extname(t.originalname))}});const r=i({storage:o,limits:2097152,fileFilter:(e,t,n)=>{"image/jpeg"==t.mimetype||"image/png"==t.mimetype||"image/jpg"==t.mimetype?n(null,!0):n(null,!1)}}),d=a.promisify(r.fields([{name:"image"}]));e.exports=d},2541:(e,t,n)=>{const a=n(6037),s=new a.Schema({nom:{type:String,required:!0},natureId:{type:a.Schema.Types.ObjectId,ref:"NatureActe"},code:{type:Number,required:!0,maxlength:50},prix:{type:Number,required:!0,maxlength:50},duree:{type:Number},moments:{type:[String]},articles:[{articleId:{type:a.Schema.Types.ObjectId,ref:"Article"},quantite:Number}]}),i=a.model("ActeDentaire",s);t.acteDentaireSchema=s,t.ActeDentaire=i},5607:(e,t,n)=>{const a=n(6037),s=new a.Schema({nom:{type:String,required:!0,maxlength:50}}),i=a.model("Allergie",s);t.allergieSchema=s,t.Allergie=i},6782:(e,t,n)=>{const a=n(6037),s=new a.Schema({nom:{type:String,required:!0}}),i=a.model("Cabinet",s);t.cabinetSchema=s,t.Cabinet=i},7016:(e,t,n)=>{const a=n(6037),s=new a.Schema({nom:{type:String,required:!0}}),i=a.model("CategorieMedicament",s);t.categorieMedicamentSchema=s,t.CategorieMedicament=i},4560:(e,t,n)=>{const a=n(6037),s=new a.Schema({lastNumOrdre:{type:Number,default:0},year:{type:Number}}),i=a.model("CounterDevi",s);t.CounterDevi=i,t.counterDeviSchema=s},1483:(e,t,n)=>{const a=n(6037),s=new a.Schema({lastNumOrdre:{type:Number,default:0},year:{type:Number}}),i=a.model("CounterPaiement",s);t.CounterPaiement=i,t.counterPaiementSchema=s},3192:(e,t,n)=>{const a=n(6037),s=new a.Schema({nom:{type:String,required:!0,maxlength:50},detailCouvertureIds:[{type:a.Schema.Types.ObjectId,ref:"DetailCouverture"}]}),i=a.model("Couverture",s);t.couvertureSchema=s,t.Couverture=i},4145:(e,t,n)=>{const a=n(6037),s=new a.Schema({numeroFDI:{type:String,required:!0},description:{type:String}}),i=a.model("Dent",s);t.dentSchema=s,t.Dent=i},1445:(e,t,n)=>{const a=n(6037),s=new a.Schema({nom:{type:String,required:!0,maxlength:50},couvertureId:{type:a.Schema.Types.ObjectId,ref:"Couverture"}}),i=a.model("DetailCouverture",s);t.detailCouvertureSchema=s,t.DetailCouverture=i},1886:(e,t,n)=>{const a=n(6037),s=new a.Schema({numOrdre:{type:Number},patientId:{type:a.Schema.Types.ObjectId,ref:"Patient"},medecinId:{type:a.Schema.Types.ObjectId,ref:"Medecin"},dateDevi:{type:Date,default:Date.now},montant:{type:Number},images:{type:Array},rdvIds:[{type:a.Schema.Types.ObjectId,ref:"Rdv"}],acteEffectues:[{acteId:{type:a.Schema.Types.ObjectId,ref:"ActeDentaire"},dentIds:[{type:a.Schema.Types.ObjectId,ref:"Dent"}],prix:{type:Number},isPaye:{type:Boolean,default:!1}}],articles:[{articleId:{type:a.Schema.Types.ObjectId,ref:"Article"},quantite:{type:Number}}]}),i=a.model("Devi",s);t.deviSchema=s,t.Devi=i},6939:(e,t,n)=>{const a=n(6037),s=new a.Schema({nom:{type:String,required:!0},prenom:{type:String}}),i=a.model("Medecin",s);t.MedecinSchema=s,t.Medecin=i},4833:(e,t,n)=>{const a=n(6037),s=new a.Schema({nom:{type:String,required:!0,maxlength:50},description:{type:String,maxlength:255},categorieId:{type:a.Schema.Types.ObjectId,ref:"CategorieMedicament"}}),i=a.model("Medicament",s);t.medicamentSchema=s,t.Medicament=i},948:(e,t,n)=>{const a=n(6037),s=new a.Schema({nom:{type:String,required:!0}}),i=a.model("NatureActe",s);t.natureActeSchema=s,t.NatureActe=i},1529:(e,t,n)=>{const a=n(6037),s=new a.Schema({numOrdre:{type:Number},patientId:{type:a.Schema.Types.ObjectId,ref:"Patient"},numCheque:{type:String,maxlength:100},mode:{type:String,required:!0},date:{type:Date},montant:{type:Number,required:!0}}),i=a.model("Paiement",s);t.paiementSchema=s,t.Paiement=i},4836:(e,t,n)=>{const a=n(6037),s=new a.Schema({nom:{type:String,required:!0,maxlength:50},description:{type:String,maxlength:255},considerationsSpeciales:{type:String,maxlength:255}}),i=a.model("Pathologie",s);t.pathologieSchema=s,t.Pathologie=i},495:(e,t,n)=>{const a=n(6037),s=new a.Schema({dateRecu:{type:String},numOrdre:{type:Number},nom:{type:String,required:!0,maxlength:50},prenom:{type:String,required:!0,maxlength:50},dateNaissance:{type:Date},cin:{type:String},profession:{type:String},images:{type:Array},couvertureId:{type:a.Schema.Types.ObjectId,ref:"Couverture"},detailCouvertureId:{type:a.Schema.Types.ObjectId,ref:"DetailCouverture"},medicamentIds:[{medicamentId:{type:a.Schema.Types.ObjectId,ref:"Medicament"},dateDebut:Date,dateFin:Date}],pathologieIds:[{pathologieId:{type:a.Schema.Types.ObjectId,ref:"Pathologie"}}],allergieIds:[{allergieId:{type:a.Schema.Types.ObjectId,ref:"Allergie"}}],historiqueMedecins:[{medecinId:{type:a.Schema.Types.ObjectId,ref:"Medecin"},dateDebut:Date,dateFin:Date}],isMasculin:{type:Boolean},regionId:{type:a.Schema.Types.ObjectId,ref:"Region"},provinceId:{type:a.Schema.Types.ObjectId,ref:"Province"},telephone:{type:String,maxlength:50},ville:{type:String,maxlength:255},deviIds:[{deviId:{type:a.Schema.Types.ObjectId,ref:"Devi"},montant:Number}],paiementIds:[{paiementId:{type:a.Schema.Types.ObjectId,ref:"Paiement"},montant:Number}],prochainRdv:{date:{type:Date}},totalDevis:{type:Number,default:0},totalPaiements:{type:Number,default:0},balance:{type:Number,default:0}});s.methods.calculateTotalDevis=function(){let e=0;this.deviIds.forEach((t=>{e+=t.montant})),this.totalDevis=e},s.methods.calculateTotalPaiements=function(){let e=0;this.paiementIds.forEach((t=>{e+=t.montant})),this.totalPaiements=e},s.methods.calculateBalance=function(){this.balance=this.totalDevis-this.totalPaiements},s.index({nom:1,prenom:1,cin:1});const i=a.model("Patient",s);t.patientSchema=s,t.Patient=i},3983:(e,t,n)=>{const a=n(6037),s=new a.Schema({lotId:{type:a.Schema.Types.ObjectId,ref:"Lot"},code:{type:String,required:!0},nom:{type:String,required:!0},stockInitial:{type:Number},stockAlerte:{type:Number},stockActuel:{type:Number},uniteMesureId:{type:a.Schema.Types.ObjectId,ref:"UniteMesure"},uniteReglementaireId:{type:a.Schema.Types.ObjectId,ref:"UniteReglementaire"},prixHT:{type:Number},tauxTVA:{type:Number},prixTTC:{type:Number},isExpiration:{type:Boolean},images:{type:Array},receptionBCIds:[{type:a.Schema.Types.ObjectId,ref:"ReceptionBonCommande"}],deviIds:[{type:a.Schema.Types.ObjectId,ref:"Devi"}]});s.methods.updateStockActuel=async function(){const e=await this.model("ReceptionBonCommande").find({_id:{$in:this.receptionBCIds}}),t=await this.model("Devi").find({_id:{$in:this.deviIds}});let n=0;e.forEach(((e,t)=>{const a=e.articles.find((e=>e.articleId.toString()===this._id.toString()));n+=a.quantite})),t.forEach((e=>{const t=e.articles.find((e=>e.articleId.toString()===this._id.toString()));n-=t.quantite})),this.stockActuel=n,await this.save()};const i=a.model("Article",s);t.articleSchema=s,t.Article=i},4066:(e,t,n)=>{const a=n(6037),{ReceptionBonCommande:s}=n(9113),i=new a.Schema({numOrdre:{type:String},date:{type:Date},objet:{type:String},societeRetenuId:{type:a.Schema.Types.ObjectId,ref:"Societe"},montantHT:{type:Number},tva:Number,montantTTC:{type:Number},commentaire:{type:String},articles:[{articleId:{type:a.Schema.Types.ObjectId,ref:"Article"},prixTTC:Number,quantiteTotal:Number,quantiteRestante:Number}],paiementIds:[{type:a.Schema.Types.ObjectId,ref:"PaiementBonCommande"}],statut:{type:String},images:{type:Array},receptionIds:[{type:a.Schema.Types.ObjectId,ref:"ReceptionBonCommande"}]});i.methods.updateQuantiteRestante=async function(){let e=this.articles;for(let t=0;t<e.length;t++){let n=e[t],a=this.receptionIds,i=n.quantiteTotal,o=0;for(let e=0;e<a.length;e++){let t=await s.findById(a[e]),i=t.articles.findIndex((e=>e.articleId.toString()===n.articleId.toString()));-1!==i&&(o+=t.articles[i].quantite)}n.quantiteRestante=i-o}await this.save()},i.methods.updateStatut=async function(){let e=this.receptionIds,t=this.articles,n=0,a=0,i=!1;for(let e=0;e<t.length;e++)a+=t[e].quantiteTotal;for(let a=0;a<e.length;a++){let o=await s.findById(e[a]);o.isLast&&(i=!0);for(let e=0;e<t.length;e++){let a=o.articles.findIndex((n=>n.articleId.toString()===t[e].articleId.toString()));-1!==a&&(n+=o.articles[a].quantite)}}this.statut=i?n===a?"Livré":"Partiellement livré":0===n?"En attente":n>=a?"Livré":"Partiellement en cours",await this.save()};const o=a.model("BonCommande",i);t.bonCommandeSchema=i,t.BonCommande=o},5858:(e,t,n)=>{const a=n(6037),s=new a.Schema({lastNumOrdre:{type:Number,default:0},year:{type:Number}}),i=a.model("CounterBonCommande",s);t.CounterBonCommande=i,t.counterBonCommandeSchema=s},119:(e,t,n)=>{const a=n(6037),s=new a.Schema({lastNumOrdre:{type:Number,default:0},year:{type:Number}}),i=a.model("CounterReceptionBC",s);t.CounterReceptionBC=i,t.counterReceptionBCSchema=s},7586:(e,t,n)=>{const a=n(6037),s=new a.Schema({nom:{type:String,required:!0}}),i=a.model("Lot",s);t.lotSchema=s,t.Lot=i},7957:(e,t,n)=>{const a=n(6037),s=new a.Schema({bonCommandeId:{type:a.Schema.Types.ObjectId,ref:"BonCommande"},montant:{type:Number},date:{type:Date},modePaiement:{type:String},numCheque:{type:String},banque:{type:String},commentaire:{type:String},images:{type:Array}}),i=a.model("PaiementBonCommande",s);t.paiementBonCommandeSchema=s,t.PaiementBonCommande=i},9113:(e,t,n)=>{const a=n(6037),s=new a.Schema({bonCommandeId:{type:a.Schema.Types.ObjectId,ref:"BonCommande"},date:{type:Date},numOrdre:{type:String},articles:[{articleId:{type:a.Schema.Types.ObjectId,ref:"Article"},quantite:Number,datePeremption:Date}],commentaire:{type:String},images:{type:Array},isLast:{type:Boolean}}),i=a.model("ReceptionBonCommande",s);t.receptionBonCommandeSchema=s,t.ReceptionBonCommande=i},4303:(e,t,n)=>{const a=n(6037),s=new a.Schema({nom:{type:String,required:!0},telephone:String,adresse:String,ville:String,banque:String,lieuOuvertureBanque:String,RIB:String,numPatente:String,numRC:String,numIF:String,numCNSS:String,numICE:String,email:String,fax:String,site:String,taxPro:String,description:String,articleIds:[{type:a.Schema.Types.ObjectId,ref:"Article"}]}),i=a.model("Societe",s);t.societeSchema=s,t.Societe=i},6743:(e,t,n)=>{const a=n(6037),s=new a.Schema({nom:{type:String,required:!0},description:{type:String}}),i=a.model("UniteMesure",s);t.uniteMesureSchema=s,t.UniteMesure=i},5712:(e,t,n)=>{const a=n(6037),s=new a.Schema({nom:{type:String,required:!0},description:{type:String},normeApplicable:{type:String}}),i=a.model("UniteReglementaire",s);t.uniteReglementaireSchema=s,t.UniteReglementaire=i},7784:(e,t,n)=>{const a=n(6037),s=new a.Schema({nom:String,code:String,regionId:{type:a.Schema.Types.ObjectId,ref:"Region"}}),i=a.model("Province",s);t.provinceSchema=s,t.Province=i},3350:(e,t,n)=>{const a=n(6037),s=new a.Schema({patientId:{type:a.Schema.Types.ObjectId,ref:"Patient"},datePrevu:{type:Date,required:!0},description:{type:String,maxlength:255},isHonnore:{type:Boolean,default:!1},isAnnule:{type:Boolean,default:!1},isReporte:{type:Boolean,default:!1},lastRdvId:{type:a.Schema.Types.ObjectId,ref:"Rdv"},dateNouveauRdv:{type:Date},deviId:{type:a.Schema.Types.ObjectId,ref:"Devi"},natureId:{type:a.Schema.Types.ObjectId,ref:"NatureActe"},acteId:{type:a.Schema.Types.ObjectId,ref:"ActeDentaire"},heureDebut:{heure:{type:Number},minute:{type:Number}},heureFin:{heure:{type:Number},minute:{type:Number}}});s.index({datePrevu:1});const i=a.model("Rdv",s);t.rdvSchema=s,t.Rdv=i},5748:(e,t,n)=>{const a=n(6037),s=new a.Schema({nom:String,code:Number}),i=a.model("Region",s);t.regionSchema=s,t.Region=i},8104:(e,t,n)=>{const a=n(6037),s=new a.Schema({nom:{type:String,required:!0}}),i=a.model("Role",s);t.roleSchema=s,t.Role=i},6572:(e,t,n)=>{const a=n(6037),s=new a.Schema({nom:{type:String,required:!0}}),i=a.model("SpecialiteMedecin",s);t.specialiteMedecinSchema=s,t.SpecialiteMedecin=i},1171:(e,t,n)=>{const a=n(6726),s=n(829),i=n(6037),o=new i.Schema({nom:{type:String,minlength:2,maxlength:50,unique:!0},email:{type:String,required:!0,minlength:2,maxlength:50,unique:!0},roleId:{type:i.Schema.Types.ObjectId,ref:"Role"},avatar:String,password:{type:String,required:!0,minlength:5,maxlength:1024}});o.methods.generateAuthToken=function(){return s.sign({_id:this._id,email:this.email,nom:this.nom,roleId:this.roleId},a.get("jwtPrivateKey"))};const r=i.model("User",o);t.userSchema=o,t.User=r},9838:(e,t,n)=>{const a=n(829),s=n(6726),{Role:i}=n(8104);e.exports=async function(e,t,n){const o=await i.find();let r=[];if(o.map((e=>{"admin"!==e.nom&&"chef"!==e.nom||r.push(e._id.toString())})),!s.get("requiresAuth"))return n();const d=e.header("x-auth-token");if(!d)return t.status(401).send("Access denied. No token provided.");try{const i=a.verify(d,s.get("jwtPrivateKey"));if(!r.includes(i.roleId.toString()))return t.status(401).send("Access denied. not authorized.");e.user=i,n()}catch(e){t.status(400).send("Invalid token.")}}},4784:(e,t,n)=>{const a=n(7252),{ActeDentaire:s}=n(2541),{NatureActe:i}=n(948),o=n(4276),r=n(1987),d=n(473),c=a.Router();c.get("/",(async(e,t)=>{const{currentPage:n,pageSize:a,sortColumn:i,order:o,searchQuery:r}=e.query;if(n&&a){const e=(n-1)*a,d={};r&&(d.$or=[{nom:{$regex:r,$options:"i"}}]);const c=await s.countDocuments(d),u=await s.find(d).populate("natureId").populate("articles.articleId").populate({path:"articles.articleId",populate:{path:"uniteMesureId"}}).sort({[i]:"asc"===o?1:-1}).skip(e).limit(a);return t.send({data:u,totalCount:c})}{const e=await s.find().populate("natureId").sort("code");return t.send(e)}})),c.post("/",[o,r],(async(e,t)=>{const{error:n}=d.acteDentaire(e.body);if(n)return t.status(400).send(n.details[0].message);const{nom:a,natureId:o,code:r,prix:c,duree:u,moments:l,articles:m}=e.body;if(o&&!await i.findById(o))return t.status(400).send("NatureActe Invalide.");const p=new s({nom:a,natureId:o,code:r,prix:c,duree:u,moments:l,articles:m});await p.save(),t.send(p)})),c.put("/:id",[o,r],(async(e,t)=>{const{error:n}=d.acteDentaire(e.body);if(n)return t.status(400).send(n.details[0].message);const{nom:a,natureId:o,code:r,prix:c,duree:u,moments:l,articles:m}=e.body;if(o&&""!=o&&!await i.findById(o))return t.status(400).send("NatureActe Invalide.");const p=await s.findByIdAndUpdate(e.params.id,{nom:a,natureId:""!=o?o:void 0,code:r,prix:c,duree:u,moments:l,articles:m},{new:!0});if(!p)return t.status(404).send("le acteDentaire avec cet id n'existe pas");t.send(p)})),c.get("/:id",(async(e,t)=>{const n=await s.findById(e.params.id);if(!n)return t.status(404).send("le acteDentaire avec cet id n'existe pas");t.send(n)})),c.delete("/:id",[o,r],(async(e,t)=>{const n=await s.findOneAndDelete({_id:e.params.id});if(!n)return t.status(404).send("le acteDentaire avec cet id n'existe pas");t.send(n)})),e.exports=c},8042:(e,t,n)=>{const a=n(7252),{Allergie:s}=n(5607),i=n(4276),o=n(1987),r=n(473),d=a.Router();d.get("/",(async(e,t)=>{const n=await s.find().sort("nom");t.send(n)})),d.post("/",[i,o],(async(e,t)=>{const{error:n}=r.allergie(e.body);if(n)return t.status(400).send(n.details[0].message);const{nom:a}=e.body,i=new s({nom:a});await i.save(),t.send(i)})),d.put("/:id",[i,o],(async(e,t)=>{const{error:n}=r.allergie(e.body);if(n)return t.status(400).send(n.details[0].message);const{nom:a}=e.body,i=await s.findByIdAndUpdate(e.params.id,{nom:a},{new:!0});if(!i)return t.status(404).send("allergie avec cet id n'existe pas");t.send(i)})),d.get("/:id",(async(e,t)=>{const n=await s.findById(e.params.id);if(!n)return t.status(404).send("allergie avec cet id n'existe pas");t.send(n)})),d.delete("/:id",[i,o],(async(e,t)=>{const n=await s.findOneAndDelete({_id:e.params.id});if(!n)return t.status(404).send("allergie avec cet id n'existe pas");t.send(n)})),e.exports=d},9498:(e,t,n)=>{n(2446);const a=n(5486),{User:s}=(n(7825),n(1171)),i=n(473),o=n(7252).Router();o.post("/",(async(e,t)=>{const{error:n}=i.user(e.body);if(n)return t.status(400).send(n.details[0].message);let o=await s.findOne({email:e.body.email});if(!o)return t.status(400).send("email ou mot de pass invalid.");if(!await a.compare(e.body.password,o.password))return t.status(400).send("email ou mot de pass invalide.");const r=o.generateAuthToken();t.send(r)})),e.exports=o},1933:(e,t,n)=>{const a=n(7252),{Cabinet:s}=n(6782),i=n(4276),o=n(1987),r=n(473),d=a.Router();d.get("/",(async(e,t)=>{const n=await s.find().sort("nom");t.send(n)})),d.post("/",[i,o],(async(e,t)=>{const{error:n}=r.cabinet(e.body);if(n)return t.status(400).send(n.details[0].message);const a=new s({nom:e.body.nom});await a.save(),t.send(a)})),d.put("/:id",[i,o],(async(e,t)=>{const{error:n}=r.cabinet(e.body);if(n)return t.status(400).send(n.details[0].message);const a=await s.findByIdAndUpdate(e.params.id,{nom:e.body.nom},{new:!0});if(!a)return t.status(404).send("le cabinet avec cet id n'existe pas");t.send(a)})),d.get("/:id",(async(e,t)=>{const n=await s.findById(e.params.id);if(!n)return t.status(404).send("le cabinet avec cet id n'existe pas");t.send(n)})),d.delete("/:id",[i,o],(async(e,t)=>{const n=await s.findOneAndDelete({_id:e.params.id});if(!n)return t.status(404).send("le cabinet avec cet id n'existe pas");t.send(n)})),e.exports=d},8943:(e,t,n)=>{const a=n(7252),{CategorieMedicament:s}=n(7016),i=n(4276),o=n(1987),r=n(473),d=a.Router();d.get("/",(async(e,t)=>{const n=await s.find().sort("nom");t.send(n)})),d.post("/",[i,o],(async(e,t)=>{const{error:n}=r.categorieMedicament(e.body);if(n)return t.status(400).send(n.details[0].message);const a=new s({nom:e.body.nom});await a.save(),t.send(a)})),d.put("/:id",[i,o],(async(e,t)=>{const{error:n}=r.categorieMedicament(e.body);if(n)return t.status(400).send(n.details[0].message);const a=await s.findByIdAndUpdate(e.params.id,{nom:e.body.nom},{new:!0});if(!a)return t.status(404).send("Categorie CategorieMedicament avec cet id n'existe pas");t.send(a)})),d.get("/:id",(async(e,t)=>{const n=await s.findById(e.params.id);if(!n)return t.status(404).send("Categorie CategorieMedicament avec cet id n'existe pas");t.send(n)})),d.delete("/:id",[i,o],(async(e,t)=>{const n=await s.findOneAndDelete(e.params.id);if(!n)return t.status(404).send("Categorie medicament avec cet id n'existe pas");t.send(n)})),e.exports=d},8975:(e,t,n)=>{const a=n(7252),{Couverture:s}=n(3192),i=n(4276),o=n(1987),r=n(473),{DetailCouverture:d}=n(1445),c=a.Router();c.get("/",(async(e,t)=>{const n=await s.find().sort("nom");t.send(n)})),c.post("/",[i,o],(async(e,t)=>{const{error:n}=r.couverture(e.body);if(n)return t.status(400).send(n.details[0].message);const{nom:a,detailCouvertureIds:i}=e.body,o=new s({nom:a,detailCouvertureIds:i||[]});await o.save(),t.send(o)})),c.put("/:id",[i,o],(async(e,t)=>{const{error:n}=r.couverture(e.body);if(n)return t.status(400).send(n.details[0].message);const{nom:a,detailCouvertureIds:i}=e.body,o=await s.findByIdAndUpdate(e.params.id,{nom:a,detailCouvertureIds:i},{new:!0});if(!o)return t.status(404).send("couverture avec cet id n'existe pas");t.send(o)})),c.get("/:id",(async(e,t)=>{const n=await s.findById(e.params.id);if(!n)return t.status(404).send("couverture avec cet id n'existe pas");t.send(n)})),c.delete("/:id",[i,o],(async(e,t)=>{const n=await s.findOneAndDelete({_id:e.params.id});if(!n)return t.status(404).send("couverture avec cet id n'existe pas");await d.deleteMany({couvertureId:n._id}),t.send(n)})),e.exports=c},6908:(e,t,n)=>{const a=n(7252),{Dent:s}=n(4145),i=n(4276),o=n(1987),r=n(473),d=a.Router();d.get("/",(async(e,t)=>{const n=await s.find().sort("numeroFDI");t.send(n)})),d.post("/",[i,o],(async(e,t)=>{const{error:n}=r.dent(e.body);if(n)return t.status(400).send(n.details[0].message);const a=new s({numeroFDI:e.body.numeroFDI,description:e.body.description});await a.save(),t.send(a)})),d.put("/:id",[i,o],(async(e,t)=>{const{error:n}=r.dent(e.body);if(n)return t.status(400).send(n.details[0].message);const a=await s.findByIdAndUpdate(e.params.id,{numeroFDI:e.body.numeroFDI,description:e.body.description},{new:!0});if(!a)return t.status(404).send("dent avec cet id n'existe pas");t.send(a)})),d.get("/:id",(async(e,t)=>{const n=await s.findById(e.params.id);if(!n)return t.status(404).send("dent avec cet id n'existe pas");t.send(n)})),d.delete("/:id",[i,o],(async(e,t)=>{const n=await s.findOneAndDelete({_id:e.params.id});if(!n)return t.status(404).send("dent avec cet id n'existe pas");t.send(n)})),e.exports=d},9080:(e,t,n)=>{const a=n(7252),{DetailCouverture:s}=n(1445),i=n(4276),{Couverture:o}=n(3192),r=n(1987),d=n(473),c=a.Router();c.get("/",(async(e,t)=>{const n=await s.find().populate("couvertureId").sort("nom");t.send(n)})),c.post("/",[i,r],(async(e,t)=>{const{error:n}=d.detailCouverture(e.body);if(n)return t.status(400).send(n.details[0].message);const{nom:a,couvertureId:i}=e.body,o=new s({nom:a,couvertureId:i});await o.save(),t.send(o)})),c.put("/:id",[i,r],(async(e,t)=>{const{error:n}=d.detailCouverture(e.body);if(n)return t.status(400).send(n.details[0].message);const{nom:a,couvertureId:i}=e.body,o=await s.findByIdAndUpdate(e.params.id,{nom:a,couvertureId:i},{new:!0});if(!o)return t.status(404).send("detailCouverture avec cet id n'existe pas");t.send(o)})),c.get("/:id",(async(e,t)=>{const n=await s.findById(e.params.id);if(!n)return t.status(404).send("detailCouverture avec cet id n'existe pas");t.send(n)})),c.delete("/:id",[i,r],(async(e,t)=>{const n=await s.findOneAndDelete(e.params.id);if(!n)return t.status(404).send("detailCouverture avec cet id n'existe pas");await o.updateMany({detailCouvertureIds:n._id},{$pull:{detailCouvertureIds:n._id}}),t.send(n)})),e.exports=c},9597:(e,t,n)=>{const a=n(7252),{Rdv:s}=n(3350),{Devi:i}=n(1886),{Dent:o}=n(4145),{Patient:r}=n(495),{Medecin:d}=n(6939),{CounterDevi:c}=n(4560),{ActeDentaire:u}=n(2541),{Article:l}=n(3983),m=n(4276),p=n(1987),g=n(473),y=n(8967),I=n(1912),f=n(5049),w=n(9819),v=a.Router();v.get("/",(async(e,t)=>{const n=await i.find().populate({path:"medecinId"}).populate({path:"patientId"}).populate("rdvIds").sort("numOrdre");t.send(n)})),v.post("/",[m,p],(async(e,t)=>{try{await f(e,t)}catch(n){t.status(500).send({message:`Could not upload the images: ${e.files.originalname}. ${n}`})}const{error:n}=g.devi(e.body);if(n)return w(e.files),t.status(400).send(n.details[0].message);const{patientId:a,newPatient:m,medecinId:p,dateDevi:v,montant:h,acteEffectues:b,rdvIds:S,articles:x}=e.body,{image:D}=y(e.files);D&&I(D);const C=D?D.map((e=>e.destination+"/compressed/"+e.filename)):[],_=new Date(v).getFullYear();let A=await c.findOne({year:_});A||(A=new c({lastNumOrdre:0,year:_})),A.lastNumOrdre+=1;const R=A.lastNumOrdre;let O={};if(a&&(O=await r.findById(a),!O))return t.status(400).send("Patient Invalide.");if(m)if(a)O.cin=m.cin,O.nom=m.nom,O.prenom=m.prenom,O.isMasculin=m.isMasculin,O.telephone=m.telephone,O.regionId=m.regionId?m.regionId:void 0,O.provinceId=m.provinceId?m.provinceId:void 0;else{const{error:e}=g.patient(m);if(e)return t.status(400).send(e.details[0].message);O=new r({cin:m.cin,nom:m.nom,prenom:m.prenom,isMasculin:m.isMasculin,telephone:m.telephone,regionId:m.regionId?m.regionId:O.regionId,provinceId:m.provinceId?m.provinceId:O.provinceId})}if(p&&!await d.findById(p))return t.status(400).send("Medecin Invalide.");let q=0,B=0;for(;q<b.length;){if(b[q]){const e=await u.findById(b[q].acteId);if(!e)return t.status(400).send("acte Invalide.");if(1===b.length&&(e.articles=x),null!==e.prix&&void 0!==e.prix||(e.prix=b[q].prix),await e.save(),b[q].dentIds&&0!==b[q].dentIds.length)for(;B<b[q].dentIds.length;){if(!await o.findById(b[q].dentIds[B]))return t.status(400).send("Dent Invalide.");B++}}q++}const T=new i({numOrdre:R,patientId:O._id,medecinId:p,dateDevi:v,acteEffectues:b,montant:h,rdvIds:S,articles:x,images:C});if(O.deviIds.push({deviId:T._id,montant:h}),S&&0!==S.length){let e=0;for(;e<S.length;){const n=await s.findById(S[e]);if(!n)return t.status(400).send("Rdv Invalide.");n.deviId=T._id,n.isHonnore=!0,n.isReporte=!1,n.isAnnule=!1,await n.save(),e++}}O.calculateTotalDevis(),O.calculateBalance(),await A.save(),await T.save(),await O.save(),x.forEach((async e=>{const t=await l.findById(e.articleId);t.deviIds.push(T._id),await t.save(),await t.updateStockActuel()})),t.send(T)})),v.put("/:id",[m,p],(async(e,t)=>{try{await f(e,t)}catch(n){t.status(500).send({message:`Could not upload the images: ${e.files.originalname}. ${n}`})}const{error:n}=g.devi(e.body);if(n)return w(e.files),t.status(400).send(n.details[0].message);const{numOrdre:a,patientId:s,newPatient:d,medecinId:c,dateDevi:m,montant:p,articles:v,acteEffectues:h,imagesDeletedIndex:b}=e.body,{image:S}=y(e.files);S&&I(S);const x=await i.findById(e.params.id);if(!x)return w(e.files),t.status(400).send("Devi Invalide.");const D=S?S.map((e=>e.destination+"/compressed/"+e.filename)):[],C=b&&0!==b.length?x.images.filter(((e,t)=>!b.includes(t))):x.images;C.push(...D);let _=0,A=0;for(;_<h.length;){if(h[_]){const e=await u.findById(h[_].acteId);if(!e)return t.status(400).send("acte Invalide.");if(1===h.length&&(e.articles=v),null!==e.prix&&void 0!==e.prix||(e.prix=h[_].prix),await e.save(),h[_].dentIds&&0!=h[_].dentIds.length)for(;A<h[_].dentIds.length;){if(!await o.findById(h[_].dentIds[A]))return t.status(400).send("Dent Invalide.");A++}}_++}await i.findByIdAndUpdate(e.params.id,{numOrdre:a,patientId:s,medecinId:c,dateDevi:m,acteEffectues:h,montant:p,articles:v,images:C});const R=await r.findOneAndUpdate({_id:s},{$set:{"deviIds.$[elem].montant":p}},{arrayFilters:[{"elem.deviId":x._id}],new:!0});if(!R)return t.status(404).send("Failed to update patient with devi montant.");R.cin=d.cin,R.nom=d.nom,R.prenom=d.prenom,R.isMasculin=d.isMasculin,R.telephone=d.telephone,R.regionId=d.regionId?d.regionId:R.regionId,R.provinceId=d.provinceId?d.provinceId:R.provinceId,R.calculateTotalDevis(),R.calculateBalance(),await R.save(),v.forEach((async e=>{const t=await l.findById(e.articleId);await t.updateStockActuel()})),t.send(x)})),v.get("/:id",(async(e,t)=>{const n=await i.findById(e.params.id).populate({path:"medecinId"}).populate({path:"patientId"}).populate({path:"articles",populate:{path:"articleId"}}).populate([{path:"acteEffectues",populate:{path:"dentIds"}},{path:"acteEffectues",populate:{path:"acteId",populate:{path:"natureId",select:"nom"}}}]);if(!n)return t.status(404).send("le devi avec cet id n'existe pas");t.send(n)})),v.delete("/:id",[m,p],(async(e,t)=>{const n=await i.findOneAndDelete({_id:e.params.id});if(!n)return t.status(404).send("le devi avec cet id n'existe pas");n.images&&w(n.images);try{await r.updateOne({_id:n.patientId},{$pull:{deviIds:{deviId:n._id}}});const e=await r.findById(n.patientId);if(e.calculateTotalDevis(),e.calculateBalance(),n.rdvIds&&0!==n.rdvIds.length){let e=0;for(;e<n.rdvIds.length;){const a=await s.findById(n.rdvIds[e]);if(!a)return t.status(400).send("Rdv Invalide.");a.deviId=null,await a.save(),e++}}await e.save(),n.articles.forEach((async e=>{const t=await l.findById(e.articleId);t.deviIds=t.deviIds.filter((e=>e.toString()!==n._id.toString())),await t.save(),await t.updateStockActuel()}))}catch(e){return t.status(500).send("An error occurred")}t.send(n)})),e.exports=v},6320:(e,t,n)=>{const a=n(7252),{Devi:s}=n(1886),i=a.Router();i.get("/",(async(e,t)=>{const n=parseInt(e.query.currentPage)||1,a=parseInt(e.query.pageSize)||15,i=e.query.sortColumn||"nom",o=e.query.order||"asc",r=e.query.time||"journee",d=new Date(e.query.date);let c,u;if("journee"===r){const e=1;c=new Date(d),c.setUTCHours(-e,0,0,0),u=new Date(d),u.setUTCHours(23-e,59,59,999)}else"mois"===r?(c=new Date(d.getFullYear(),d.getMonth(),1),u=new Date(d.getFullYear(),d.getMonth()+1,0,23,59,59,999)):"annee"===r&&(c=new Date(d.getFullYear(),0,1),u=new Date(d.getFullYear(),11,31,23,59,59,999));const l={dateDevi:{$gte:c,$lte:u}},m=(n-1)*a;try{const e=await s.countDocuments(l),n=await s.find(l).populate({path:"medecinId"}).populate({path:"patientId"}).populate("rdvIds").sort({[i]:"asc"===o?1:-1}).skip(m).limit(a);t.send({data:n,totalCount:e})}catch(e){t.status(500).send("Error fetching devis data")}})),e.exports=i},6710:(e,t,n)=>{const a=n(7252),{Medecin:s}=n(6939),{SpecialiteMedecin:i}=n(6572),o=n(4276),r=n(1987),d=n(473),c=a.Router();c.get("/",(async(e,t)=>{const n=await s.find().sort("nom");t.send(n)})),c.post("/",[o,r],(async(e,t)=>{const{error:n}=d.medecin(e.body);if(n)return t.status(400).send(n.details[0].message);const{nom:a,prenom:o,specialiteId:r}=e.body;if(r&&!await i.findById(r))return t.status(400).send("Specialite Invalide.");const c=new s({nom:a,prenom:o});await c.save(),t.send(c)})),c.put("/:id",[o,r],(async(e,t)=>{const{error:n}=d.medecin(e.body);if(n)return t.status(400).send(n.details[0].message);const{nom:a,prenom:o,specialiteId:r}=e.body;if(r&&""!=r&&!await i.findById(r))return t.status(400).send("Specialite Invalide.");const c=await s.findByIdAndUpdate(e.params.id,{nom:a,prenom:o},{new:!0});if(!c)return t.status(404).send("le medecin avec cet id n'existe pas");t.send(c)})),c.get("/:id",(async(e,t)=>{const n=await s.findById(e.params.id);if(!n)return t.status(404).send("le medecin avec cet id n'existe pas");t.send(n)})),c.delete("/:id",[o,r],(async(e,t)=>{const n=await s.findOneAndDelete({_id:e.params.id});if(!n)return t.status(404).send("le medecin avec cet id n'existe pas");t.send(n)})),e.exports=c},2364:(e,t,n)=>{const a=n(7252),{Medicament:s}=n(4833),i=n(4276),o=n(1987),r=n(473),d=a.Router();d.get("/",(async(e,t)=>{const n=await s.find().populate("categorieId").sort("nom");t.send(n)})),d.post("/",[i,o],(async(e,t)=>{const{error:n}=r.medicament(e.body);if(n)return t.status(400).send(n.details[0].message);const{nom:a}=e.body,i=new s({nom:a,description:e.body.description,categorieId:e.body.categorieId});await i.save(),t.send(i)})),d.put("/:id",[i,o],(async(e,t)=>{const{error:n}=r.medicament(e.body);if(n)return t.status(400).send(n.details[0].message);const{nom:a}=e.body,i=await s.findByIdAndUpdate(e.params.id,{nom:a,description:e.body.description,categorieId:e.body.categorieId},{new:!0});if(!i)return t.status(404).send("medicament avec cet id n'existe pas");t.send(i)})),d.get("/:id",(async(e,t)=>{const n=await s.findById(e.params.id);if(!n)return t.status(404).send("medicament avec cet id n'existe pas");t.send(n)})),d.delete("/:id",[i,o],(async(e,t)=>{const n=await s.findOneAndDelete({_id:e.params.id});if(!n)return t.status(404).send("medicament avec cet id n'existe pas");t.send(n)})),e.exports=d},8643:(e,t,n)=>{const a=n(7252),{NatureActe:s}=n(948),i=n(4276),o=n(1987),r=n(473),d=a.Router();d.get("/",(async(e,t)=>{const n=await s.find().sort("nom");t.send(n)})),d.post("/",[i,o],(async(e,t)=>{const{error:n}=r.natureActe(e.body);if(n)return t.status(400).send(n.details[0].message);const a=new s({nom:e.body.nom});await a.save(),t.send(a)})),d.put("/:id",[i,o],(async(e,t)=>{const{error:n}=r.natureActe(e.body);if(n)return t.status(400).send(n.details[0].message);const a=await s.findByIdAndUpdate(e.params.id,{nom:e.body.nom},{new:!0});if(!a)return t.status(404).send("la nature de l'acte avec cet id n'existe pas");t.send(a)})),d.get("/:id",(async(e,t)=>{const n=await s.findById(e.params.id);if(!n)return t.status(404).send("la nature de l'acte avec cet id n'existe pas");t.send(n)})),d.delete("/:id",[i,o],(async(e,t)=>{const n=await s.findOneAndDelete({_id:e.params.id});if(!n)return t.status(404).send("la nature de l'acte avec cet id n'existe pas");t.send(n)})),e.exports=d},3108:(e,t,n)=>{const a=n(7252),{Paiement:s}=n(1529),{Patient:i}=n(495),{CounterPaiement:o}=n(1483),r=n(4276),d=n(1987),c=n(473),u=a.Router();u.get("/",(async(e,t)=>{const n=await s.find().populate({path:"patientId",select:"  nom prenom date"}).sort("numOrdre");t.send(n)})),u.post("/",[r,d],(async(e,t)=>{const{error:n}=c.paiement(e.body);if(n)return t.status(400).send(n.details[0].message);const{patientId:a,numCheque:r,mode:d,date:u,montant:l}=e.body,m=new Date(u).getFullYear();let p=await o.findOne({year:m});p||(p=new o({lastNumOrdre:0,year:m})),p.lastNumOrdre+=1;const g=p.lastNumOrdre,y=await i.findById(a);if(!y)return t.status(400).send("Patient Invalide.");const I=new s({numOrdre:g,patientId:a,mode:d,numCheque:r,date:u,montant:l});y.paiementIds.push({paiementId:I._id,montant:l}),y.calculateTotalPaiements(),y.calculateBalance(),await p.save(),await I.save(),await y.save(),t.send(I)})),u.put("/:id",[r,d],(async(e,t)=>{const{error:n}=c.paiement(e.body);if(n)return t.status(400).send(n.details[0].message);const{patientId:a,numOrdre:o,mode:r,numCheque:d,date:u,montant:l}=e.body;if(!await i.findById(a))return t.status(400).send("Patient Invalide.");const m=await s.findByIdAndUpdate(e.params.id,{numOrdre:o,patientId:a,mode:r,numCheque:d,date:u,montant:l},{new:!0});if(!m)return t.status(404).send("le paiement avec cet id n'existe pas");const p=await i.findOneAndUpdate({_id:a},{$set:{"paiementIds.$[elem].montant":l}},{arrayFilters:[{"elem.paiementId":m._id}],new:!0});if(!p)return t.status(404).send("le patient avec cet id n'existe pas");p.calculateTotalPaiements(),p.calculateBalance(),await p.save(),t.send(m)})),u.get("/:id",(async(e,t)=>{const n=await s.findById(e.params.id).populate({path:"patientId"});if(!n)return t.status(404).send("le paiement avec cet id n'existe pas");t.send(n)})),u.delete("/:id",[r,d],(async(e,t)=>{const n=await s.findOneAndDelete({_id:e.params.id});if(!n)return t.status(404).send("le paiement avec cet id n'existe pas");try{await i.updateOne({_id:n.patientId},{$pull:{paiementIds:{paiementId:n._id}}});const e=await i.findById(n.patientId);e.calculateTotalPaiements(),e.calculateBalance(),await e.save()}catch(e){return console.log(e),t.status(500).send("An error occurred")}t.send(n)})),e.exports=u},224:(e,t,n)=>{const a=n(7252),{Paiement:s}=n(1529),i=(n(4276),n(9838),n(1987),a.Router());i.get("/",(async(e,t)=>{const n=await s.find().select("medecinId montant natureActeId patientId datePaiement -_id").populate({path:"natureActeId",select:"nom -_id"});t.send(n)})),e.exports=i},3761:(e,t,n)=>{const a=n(7252),{Paiement:s}=n(1529),i=a.Router();i.get("/",(async(e,t)=>{const n=parseInt(e.query.currentPage)||1,a=parseInt(e.query.pageSize)||15,i=e.query.sortColumn||"nom",o=e.query.order||"asc",r=e.query.time||"journee";let d,c,u=e.query.date?new Date(e.query.date):new Date;"journee"===r?(d=new Date(u.setHours(0,0,0,0)),c=new Date(u.setHours(23,59,59,999))):"mois"===r?(d=new Date(u.getFullYear(),u.getMonth(),1),c=new Date(u.getFullYear(),u.getMonth()+1,0,23,59,59,999)):"annee"===r&&(d=new Date(u.getFullYear(),0,1),c=new Date(u.getFullYear(),11,31,23,59,59,999));const l={date:{$gte:d,$lte:c}},m=(n-1)*a;try{const e=await s.countDocuments(l),n=await s.find(l).populate({path:"patientId"}).sort({[i]:"asc"===o?1:-1}).skip(m).limit(a);t.send({data:n,totalCount:e})}catch(e){t.status(500).send("Error fetching paiements data")}})),e.exports=i},5203:(e,t,n)=>{const a=n(7252),{Pathologie:s}=n(4836),i=n(4276),o=n(1987),r=n(473),d=a.Router();d.get("/",(async(e,t)=>{const n=await s.find().sort("nom");t.send(n)})),d.post("/",[i,o],(async(e,t)=>{const{error:n}=r.pathologie(e.body);if(n)return t.status(400).send(n.details[0].message);const{nom:a}=e.body,i=new s({nom:a,description:e.body.description,considerationsSpeciales:e.body.considerationsSpeciales});await i.save(),t.send(i)})),d.put("/:id",[i,o],(async(e,t)=>{const{error:n}=r.pathologie(e.body);if(n)return t.status(400).send(n.details[0].message);const{nom:a}=e.body,i=await s.findByIdAndUpdate(e.params.id,{nom:a,description:e.body.description,considerationsSpeciales:e.body.considerationsSpeciales},{new:!0});if(!i)return t.status(404).send("pathologie avec cet id n'existe pas");t.send(i)})),d.get("/:id",(async(e,t)=>{const n=await s.findById(e.params.id);if(!n)return t.status(404).send("pathologie avec cet id n'existe pas");t.send(n)})),d.delete("/:id",[i,o],(async(e,t)=>{const n=await s.findOneAndDelete({_id:e.params.id});if(!n)return t.status(404).send("pathologie avec cet id n'existe pas");t.send(n)})),e.exports=d},9890:(e,t,n)=>{const a=n(7252),{Patient:s}=n(495),{Devi:i}=n(1886),{Medecin:o}=n(6939),{Couverture:r}=n(3192),{Allergie:d}=n(5607),{Pathologie:c}=n(4836),{Medicament:u}=n(4833),{DetailCouverture:l}=n(1445),m=n(4276),p=n(1987),g=n(473),y=n(8967),I=n(1912),f=n(5049),w=n(9819),v=a.Router();v.get("/",(async(e,t)=>{const n=await s.find().populate({path:"prochainRdv"}).populate({path:"deviIds",populate:{path:"deviId",populate:{path:"acteEffectues",populate:{path:"acteId",populate:{path:"natureId",select:"nom"}}}}}).populate({path:"paiementIds",populate:{path:"paiementId"}}).sort("cin");t.send(n)})),v.post("/",[m,p],(async(e,t)=>{try{await f(e,t)}catch(n){t.status(500).send({message:`Could not upload the images: ${e.files.originalname}. ${n}`})}const{error:n}=g.patient(e.body);if(n)return w(e.files),t.status(400).send(n.details[0].message);const{cin:a,nom:i,ville:o,prenom:r,regionId:d,telephone:c,isMasculin:u,profession:l,provinceId:m,allergieIds:p,couvertureId:v,dateNaissance:h,medicamentIds:b,pathologieIds:S,detailCouvertureId:x}=e.body;let D;D="string"==typeof u?"true"===u:"boolean"==typeof u?u:void 0;const{image:C}=y(e.files);C&&I(C);const _=C?C.map((e=>e.destination+"/compressed/"+e.filename)):[],A=new s({cin:a||"",nom:i||"",prenom:r||"",isMasculin:D,profession:l||"",dateNaissance:h||void 0,telephone:c||"",ville:o||"",regionId:d||void 0,provinceId:m||void 0,couvertureId:v||null,detailCouvertureId:x||null,medicamentIds:b||[],pathologieIds:S||[],allergieIds:p||[],images:_});await A.save(),t.send(A)})),v.put("/:id",[m,p],(async(e,t)=>{try{await f(e,t)}catch(n){t.status(500).send({message:`Could not upload the images: ${e.files.originalname}. ${n}`})}const{error:n}=g.patient(e.body);if(n)return w(e.files),t.status(400).send(n.details[0].message);const{cin:a,nom:i,ville:o,prenom:r,regionId:d,telephone:c,provinceId:u,isMasculin:l,profession:m,allergieIds:p,couvertureId:v,dateNaissance:h,medicamentIds:b,pathologieIds:S,imagesDeletedIndex:x,detailCouvertureId:D}=e.body;let C;C="string"==typeof l?"true"===l:"boolean"==typeof l?l:void 0;const{image:_}=y(e.files);_&&I(_);const A=await s.findById(e.params.id);if(!A)return t.status(404).send("Patient not found");const R=_?_.map((e=>e.destination+"/compressed/"+e.filename)):[],O=x&&0!==x.length?A.images.filter(((e,t)=>!x.includes(t))):A.images;O.push(...R);const q={cin:a||"",nom:i||"",ville:o||"",prenom:r||"",images:O,telephone:c||"",profession:m||"",isMasculin:C,allergieIds:p||[],regionId:d||void 0,medicamentIds:b||[],pathologieIds:S||[],provinceId:u||void 0,couvertureId:v||void 0,dateNaissance:h||void 0,detailCouvertureId:D||void 0};await s.findByIdAndUpdate(e.params.id,q),t.send(A)})),v.get("/:id",(async(e,t)=>{const n=await s.findById(e.params.id).populate({path:"deviIds",populate:{path:"deviId",populate:{path:"acteEffectues",populate:{path:"acteId",populate:{path:"natureId",select:"nom"}}}}}).populate({path:"paiementIds",populate:{path:"paiementId"}});if(!n)return t.status(404).send("le patient avec cet id n'existe pas");t.send(n)})),v.delete("/:id",[m,p],(async(e,t)=>{const n=await s.findOneAndDelete({_id:e.params.id});if(!n)return t.status(404).send("le patient avec cet id n'existe pas");n.images&&w(n.images),t.send(n)})),e.exports=v},8838:(e,t,n)=>{const a=n(7252),{Patient:s}=n(495),i=a.Router();i.get("/",(async(e,t)=>{const n=await s.find().select("dateNaissance isMasculin profession cin prochainRdv nom numOrdre prenom telephone regionId provinceId");t.send(n)})),e.exports=i},7835:(e,t,n)=>{const a=n(7252),{Patient:s}=n(495),i=a.Router();i.get("/",(async(e,t)=>{const n=parseInt(e.query.currentPage)||1,a=parseInt(e.query.pageSize)||15,i=e.query.sortColumn||"nom",o=e.query.order||"asc",r=e.query.searchQuery||"",d=(n-1)*a;let c={};r&&(c={$or:[{nom:{$regex:r,$options:"i"}},{prenom:{$regex:r,$options:"i"}},{cin:{$regex:r,$options:"i"}}]});try{const e=await s.countDocuments(c),n=await s.find(c).sort({[i]:"asc"===o?1:-1}).skip(d).limit(a).select("dateNaissance isMasculin profession cin prochainRdv nom numOrdre prenom telephone regionId provinceId");t.send({data:n,totalCount:e})}catch(e){t.status(500).send("Error fetching patients data")}})),e.exports=i},1042:(e,t,n)=>{const a=n(7252),{Article:s}=n(3983),i=n(6037),o=n(4276),r=n(1987),d=n(473),c=n(9819),u=n(8967),l=n(5049),m=n(1912),p=a.Router();p.get("/",(async(e,t)=>{const n=e.query.currentPage?parseInt(e.query.currentPage):void 0,a=e.query.pageSize?parseInt(e.query.pageSize):void 0,o=e.query.sortColumn||"nom",r=e.query.order||"asc",d=e.query.searchQuery||"",c=e.query.selectedLots;let u;n&&a&&(u=(n-1)*a);let l=[];if(d&&l.push({$or:[{code:{$regex:d,$options:"i"}},{nom:{$regex:d,$options:"i"}}]}),void 0!==c&&""!==c){const e=c.split(",").map((e=>new i.Types.ObjectId(e.trim())));l.push({lotId:{$in:e}})}let m={};l.length>1?m.$or=l:1===l.length&&(m=l[0]);try{const e=await s.countDocuments(m),n=await s.find(m).sort({[o]:"asc"===r?1:-1}).skip(u||0).limit(a||0);t.send({data:n,totalCount:e})}catch(e){console.log(e),t.status(500).send("Error fetching articles data")}})),p.post("/",[o,r],(async(e,t)=>{try{await l(e,t)}catch(n){t.status(500).send({message:`Could not upload the images: ${e.files.originalname}. ${n}`})}const{error:n}=d.article(e.body);if(n)return c(e.files),t.status(400).send(n.details[0].message);const{lotId:a,code:i,nom:o,stockInitial:r,stockAlerte:p,uniteMesureId:g,uniteReglementaireId:y,prixHT:I,tauxTVA:f,prixTTC:w,isExpiration:v}=e.body;let h;h="string"==typeof v?"true"===v:"boolean"==typeof v?v:void 0;const{image:b}=u(e.files);b&&m(b);const S=b?b.map((e=>e.destination+"/compressed/"+e.filename)):[],x=new s({lotId:a||void 0,code:i||"",nom:o||"",stockInitial:r||0,stockAlerte:p||0,uniteMesureId:g||void 0,uniteReglementaireId:y||void 0,prixHT:I||0,tauxTVA:f||0,prixTTC:w||0,isExpiration:h,images:S});await x.save(),t.send(x)})),p.put("/:id",[o,r],(async(e,t)=>{try{await l(e,t)}catch(n){t.status(500).send({message:`Could not upload the images: ${e.files.originalname}. ${n}`})}const{error:n}=d.article(e.body);if(n)return c(e.files),t.status(400).send(n.details[0].message);const{lotId:a,code:i,nom:o,stockInitial:r,stockAlerte:p,uniteMesureId:g,uniteReglementaireId:y,prixHT:I,tauxTVA:f,prixTTC:w,isExpiration:v,imagesDeletedIndex:h}=e.body;let b;b="string"==typeof v?"true"===v:"boolean"==typeof v?v:void 0;const{image:S}=u(e.files);S&&m(S);const x=await s.findById(e.params.id);if(!x)return t.status(404).send("The article with the given ID was not found.");const D=S?S.map((e=>e.destination+"/compressed/"+e.filename)):[],C=h&&0!==h.length?x.images.filter(((e,t)=>!h.includes(t))):x.images;C.push(...D);const _={lotId:a||void 0,code:i||"",nom:o||"",stockInitial:r||0,stockAlerte:p||0,uniteMesureId:g||void 0,uniteReglementaireId:y||void 0,prixHT:I||0,tauxTVA:f||0,prixTTC:w||0,isExpiration:b,images:C};await s.findByIdAndUpdate(e.params.id,_),t.send(x)})),p.get("/lowstock/count",(async(e,t)=>{try{const e=await s.countDocuments({$expr:{$lte:["$stockActuel","$stockAlerte"]}});t.json({lowStockCount:e})}catch(e){console.error("Error fetching low stock count:",e),t.status(500).send("Error fetching low stock count")}})),p.get("/lowstock",(async(e,t)=>{try{const e=await s.find({$expr:{$lte:["$stockActuel","$stockAlerte"]}});t.send(e)}catch(e){console.error("Error fetching low stock articles:",e),t.status(500).send("Error fetching low stock articles")}})),p.get("/:id",(async(e,t)=>{const n=await s.findById(e.params.id);if(!n)return t.status(404).send("The article with the given ID was not found.");t.send(n)})),p.delete("/:id",[o,r],(async(e,t)=>{const n=await s.findOneAndDelete({_id:e.params.id});if(!n)return t.status(404).send("The article with the given ID was not found.");t.send(n)})),e.exports=p},9467:(e,t,n)=>{const a=n(7252),{Article:s}=n(3983),i=a.Router();i.get("/",(async(e,t)=>{const n=parseInt(e.query.currentPage)||1,a=parseInt(e.query.pageSize)||15,i=e.query.sortColumn||"nom",o=e.query.order||"asc",r=e.query.searchQuery||"",d=(e.query.selectedLots,(n-1)*a);let c={};r&&(c={$or:[{code:{$regex:r,$options:"i"}},{nom:{$regex:r,$options:"i"}}]});try{const e=await s.countDocuments(c),n=await s.find(c).sort({[i]:"asc"===o?1:-1}).skip(d).limit(a);t.send({data:n,totalCount:e})}catch(e){console.log(e),t.status(500).send("Error fetching articles data")}})),e.exports=i},9:(e,t,n)=>{const a=n(7252),{BonCommande:s}=n(4066),{Societe:i}=n(4303),{CounterBonCommande:o}=n(5858),r=n(473),d=n(4276),c=n(1987),u=n(8967),l=n(1912),m=n(9819),p=n(5049),g=(n(7825),n(4342),a.Router());g.get("/",(async(e,t)=>{const n=await s.find().populate("societeRetenuId").sort("nom");t.send(n)})),g.post("/",[d,c],(async(e,t)=>{try{await p(e,t)}catch(n){t.status(500).send({message:`Could not upload the images: ${e.files.originalname}. ${n}`})}const{error:n}=r.bonCommande(e.body);if(n)return m(e.files),t.status(400).send(n.details[0].message);let{date:a,objet:i,societeRetenuId:d,montantHT:c,tva:g,montantTTC:y,commentaire:I,articles:f}=e.body;const{image:w}=u(e.files);w&&l(w);const v=w?w.map((e=>e.destination+"/compressed/"+e.filename)):[],h=new Date(a).getFullYear();let b=await o.findOne({year:h});b||(b=new o({lastNumOrdre:0,year:h})),b.lastNumOrdre+=1;const S=b.lastNumOrdre,x=new s({numOrdre:S,date:a,objet:i,societeRetenuId:d||null,montantHT:c,montantTTC:y,commentaire:I,articles:f,tva:g,images:v});await b.save(),await x.save(),t.send(x)})),g.put("/:id",[d,c],(async(e,t)=>{try{await p(e,t)}catch(n){t.status(500).send({message:`Could not upload the images: ${e.files.originalname}. ${n}`})}const{error:n}=r.bonCommande(e.body);if(n)return m(e.files),t.status(400).send(n.details[0].message);const{numOrdre:a,date:i,objet:o,societeRetenuId:d,montantHT:c,tva:g,montantTTC:y,commentaire:I,articles:f,imagesDeletedIndex:w}=e.body,{image:v}=u(e.files);v&&l(v);const h=await s.findOne({_id:e.params.id});if(!h)return m(e.files),t.status(404).send("le bonCommande avec cette id n'existe pas.");const b=v?v.map((e=>e.destination+"/compressed/"+e.filename)):[],S=w&&0!==w.length?h.images.filter(((e,t)=>!w.includes(t))):h.images;S.push(...b),await s.findByIdAndUpdate(e.params.id,{numOrdre:a,date:i,objet:o,societeRetenuId:d,montantHT:c,montantTTC:y,commentaire:I,articles:f,tva:g,images:S}),t.send(h)})),g.get("/:id",(async(e,t)=>{const n=await s.findById(e.params.id).populate("societeRetenuId").populate("articles.articleId");if(!n)return t.status(404).send("le bonCommande avec cet id n'existe pas");t.send(n)})),g.delete("/:id",[d,c],(async(e,t)=>{const n=await s.findOneAndDelete({_id:e.params.id});if(!n)return t.status(404).send("le bonCommande avec cet id n'existe pas");n.images&&m(n.images),t.send(n)})),e.exports=g},6512:(e,t,n)=>{const a=n(7252),{BonCommande:s}=n(4066),i=a.Router();i.get("/",(async(e,t)=>{const n=parseInt(e.query.currentPage)||1,a=parseInt(e.query.pageSize)||15,i=e.query.sortColumn||"nom",o=e.query.order||"asc",r=e.query.searchQuery||"",d=(n-1)*a;let c={};r&&(c={$or:[{objet:{$regex:r,$options:"i"}},{numOrdre:{$regex:r,$options:"i"}}]});try{const e=await s.countDocuments(c),n=await s.find(c).sort({[i]:"asc"===o?1:-1}).skip(d).populate("societeRetenuId").limit(a);t.send({data:n,totalCount:e})}catch(e){t.status(500).send("Error fetching bonCommandes data")}})),e.exports=i},1881:(e,t,n)=>{const a=n(7252),{Lot:s}=n(7586),i=n(4276),o=n(1987),r=n(473),d=a.Router();d.get("/",(async(e,t)=>{const n=await s.find().sort("nom");t.send(n)})),d.post("/",[i,o],(async(e,t)=>{const{error:n}=r.lot(e.body);if(n)return t.status(400).send(n.details[0].message);const a=new s({nom:e.body.nom});await a.save(),t.send(a)})),d.put("/:id",[i,o],(async(e,t)=>{const{error:n}=r.lot(e.body);if(n)return t.status(400).send(n.details[0].message);const a=await s.findByIdAndUpdate(e.params.id,{nom:e.body.nom},{new:!0});if(!a)return t.status(404).send("lot avec cet id n'existe pas");t.send(a)})),d.get("/:id",(async(e,t)=>{const n=await s.findById(e.params.id);if(!n)return t.status(404).send("lot avec cet id n'existe pas");t.send(n)})),d.delete("/:id",[i,o],(async(e,t)=>{const n=await s.findOneAndDelete({_id:e.params.id});if(!n)return t.status(404).send("lot avec cet id n'existe pas");t.send(n)})),e.exports=d},1752:(e,t,n)=>{const a=n(7252),{PaiementBonCommande:s}=n(7957),i=n(4276),o=n(1987),r=n(473),d=n(8967),c=n(1912),u=n(5049),l=n(9819),m=a.Router();m.get("/",(async(e,t)=>{const n=parseInt(e.query.currentPage)||1,a=parseInt(e.query.pageSize)||15,i=e.query.sortColumn||"nom",o=e.query.order||"asc",r=e.query.time||"journee";let d,c,u=e.query.date?new Date(e.query.date):new Date;"journee"===r?(d=new Date(u.setHours(0,0,0,0)),c=new Date(u.setHours(23,59,59,999))):"mois"===r?(d=new Date(u.getFullYear(),u.getMonth(),1),c=new Date(u.getFullYear(),u.getMonth()+1,0,23,59,59,999)):"annee"===r&&(d=new Date(u.getFullYear(),0,1),c=new Date(u.getFullYear(),11,31,23,59,59,999));const l={date:{$gte:d,$lte:c}},m=(n-1)*a;try{const e=await s.countDocuments(l),n=await s.find(l).populate({path:"bonCommandeId"}).sort({[i]:"asc"===o?1:-1}).skip(m).limit(a);t.send({data:n,totalCount:e})}catch(e){t.status(500).send("Error fetching paiements data")}})),m.post("/",[i,o],(async(e,t)=>{try{await u(e,t)}catch(n){t.status(500).send({message:`Could not upload the images: ${e.files.originalname}. ${n}`})}const{error:n}=r.paiementBonCommande(e.body);if(console.log(n),n)return l(e.files),t.status(400).send(n.details[0].message);let{date:a,montant:i,bonCommandeId:o,modePaiement:m,numCheque:p,banque:g,commentaire:y}=e.body;const{image:I}=d(e.files);I&&c(I);const f=I?I.map((e=>e.destination+"/compressed/"+e.filename)):[],w=new s({date:a,montant:i,bonCommandeId:o,modePaiement:m,numCheque:p,banque:g,commentaire:y,images:f});await w.save(),t.send(w)})),m.put("/:id",[i,o],(async(e,t)=>{try{await u(e,t)}catch(n){t.status(500).send({message:`Could not upload the images: ${e.files.originalname}. ${n}`})}const{error:n}=r.paiementBonCommande(e.body);if(n)return l(e.files),t.status(400).send(n.details[0].message);let{date:a,montant:i,bonCommandeId:o,modePaiement:m,numCheque:p,banque:g,commentaire:y}=e.body;const{image:I}=d(e.files);I&&c(I);const f=await s.findById(e.params.id);if(!f)return l(e.files),t.status(404).send("PaiementBonCommande not found");const w=I?I.map((e=>e.destination+"/compressed/"+e.filename)):[],v=imagesDeletedIndex&&0!==imagesDeletedIndex.length?f.images.filter(((e,t)=>!imagesDeletedIndex.includes(t))):f.images;v.push(...w),f.date=a,f.montant=i,f.bonCommandeId=o,f.modePaiement=m,f.numCheque=p,f.banque=g,f.commentaire=y,f.images=v,await f.save(),t.send(f)})),m.get("/:id",(async(e,t)=>{const n=await s.findById(e.params.id);if(!n)return t.status(404).send("PaiementBonCommande not found");t.send(n)})),m.delete("/:id",[i,o],(async(e,t)=>{const n=await s.findOneAndDelete(e.params.id);if(!n)return t.status(404).send("PaiementBonCommande not found");l(n.images),t.send(n)})),e.exports=m},6372:(e,t,n)=>{const a=n(7252),{ReceptionBonCommande:s}=n(9113),i=n(4276),o=n(1987),r=n(473),{CounterReceptionBC:d}=n(119),c=n(8967),u=n(1912),l=n(5049),m=n(9819),{BonCommande:p}=n(4066),{Article:g}=n(3983),y=a.Router();y.get("/",(async(e,t)=>{const n=parseInt(e.query.currentPage)||1,a=parseInt(e.query.pageSize)||15,i=e.query.sortColumn||"nom",o=e.query.order||"asc",r=(e.query.time,(n-1)*a);try{const e=await s.countDocuments(),n=await s.find().populate({path:"bonCommandeId",populate:{path:"societeRetenuId",select:"nom"}}).sort({[i]:"asc"===o?1:-1}).skip(r).limit(a);t.send({data:n,totalCount:e})}catch(e){t.status(500).send("Error fetching paiements data")}})),y.post("/",[i,o],(async(e,t)=>{try{await l(e,t)}catch(n){t.status(500).send({message:`Could not upload the images: ${e.files.originalname}. ${n}`})}const{error:n}=r.receptionBonCommande(e.body);if(n)return m(e.files),t.status(400).send(n.details[0].message);let{bonCommandeId:a,date:i,articles:o,commentaire:y,isLast:I}=e.body;const{image:f}=c(e.files);f&&u(f);const w=f?f.map((e=>e.destination+"/compressed/"+e.filename)):[],v=new Date(i).getFullYear();let h=await d.findOne({year:v});h||(h=new d({lastNumOrdre:0,year:v})),h.lastNumOrdre++;const b=h.lastNumOrdre,S=new s({numOrdre:b,bonCommandeId:a,date:i,articles:o,commentaire:y,images:w,isLast:I}),x=await p.findById(a);x.receptionIds.push(S._id),await h.save(),await S.save(),await x.updateQuantiteRestante(),await x.updateStatut(),o.forEach((async e=>{const t=await g.findById(e.articleId);t.receptionBCIds.push(S._id),await t.save(),await t.updateStockActuel()})),t.send(S)})),y.put("/:id",[i,o],(async(e,t)=>{try{await l(e,t)}catch(n){t.status(500).send({message:`Could not upload the images: ${e.files.originalname}. ${n}`})}const{error:n}=r.receptionBonCommande(e.body);if(n)return m(e.files),t.status(400).send(n.details[0].message);let{numOrdre:a,bonCommandeId:i,date:o,articles:d,commentaire:y,imagesDeletedIndex:I,isLast:f}=e.body;const{image:w}=c(e.files);w&&u(w);const v=await s.findById(e.params.id);if(!v)return m(e.files),t.status(404).send("ReceptionBonCommande not found");const h=w?w.map((e=>e.destination+"/compressed/"+e.filename)):[],b=I&&0!==I.length?v.images.filter(((e,t)=>!I.includes(t))):v.images;b.push(...h),v.numOrdre=a,v.date=o,v.bonCommandeId=i,v.commentaire=y,v.images=b,v.articles=d,v.isLast=f,await v.save();const S=await p.findById(i);await S.updateQuantiteRestante(),await S.updateStatut(),d.forEach((async e=>{const t=await g.findById(e.articleId);await t.updateStockActuel()})),t.send(v)})),y.get("/:id",(async(e,t)=>{const n=await s.findById(e.params.id).populate({path:"bonCommandeId",populate:{path:"societeRetenuId",select:"nom"}}).populate({path:"articles",populate:{path:"articleId"}});if(!n)return t.status(404).send("ReceptionBonCommande not found");t.send(n)})),y.delete("/:id",[i,o],(async(e,t)=>{const n=await s.findOneAndDelete(e.params.id),a=await p.findById(n.bonCommandeId);if(a.receptionIds=a.receptionIds.filter((t=>t.toString()!==e.params.id)),await a.save(),await a.updateQuantiteRestante(),await a.updateStatut(),n.articles.forEach((async t=>{const n=await g.findById(t.articleId);n.receptionBCIds=n.receptionBCIds.filter((t=>t.toString()!==e.params.id)),await n.save(),await n.updateStockActuel()})),!n)return t.status(404).send("ReceptionBonCommande not found");m(n.images),t.send(n)})),e.exports=y},6615:(e,t,n)=>{const a=n(7252),{Societe:s}=n(4303),i=a.Router();i.get("/",(async(e,t)=>{const n=e.query.search;if(!n)return t.status(400).send("Search string is required");try{const e=await s.find({$or:[{nom:{$regex:n,$options:"i"}},{telephone:{$regex:n,$options:"i"}},{ville:{$regex:n,$options:"i"}},{numPatente:{$regex:n,$options:"i"}},{numICE:{$regex:n,$options:"i"}},{email:{$regex:n,$options:"i"}},{description:{$regex:n,$options:"i"}}]});t.send(e)}catch(e){console.log(e),t.status(500).send("Error fetching societes data")}})),e.exports=i},6178:(e,t,n)=>{const a=n(7252),{Societe:s}=n(4303),i=n(4276),o=n(1987),r=n(473),d=a.Router();d.get("/",(async(e,t)=>{const n=await s.find().sort("nom");t.send(n)})),d.post("/",[i,o],(async(e,t)=>{const{error:n}=r.societe(e.body);if(n)return t.status(400).send(n.details[0].message);const{fax:a,nom:i,RIB:o,site:d,ville:c,numRC:u,numIF:l,email:m,banque:p,taxPro:g,numCNSS:y,numICE:I,adresse:f,telephone:w,articleIds:v,numPatente:h,description:b,lieuOuvertureBanque:S}=e.body,x=new s({fax:a,nom:i,RIB:o,site:d,ville:c,numRC:u,numIF:l,email:m,banque:p,taxPro:g,numCNSS:y,numICE:I,adresse:f,telephone:w,numPatente:h,description:b,lieuOuvertureBanque:S,articleIds:v||[]});await x.save(),t.send(x)})),d.put("/:id",[i,o],(async(e,t)=>{const{error:n}=r.societe(e.body);if(n)return t.status(400).send(n.details[0].message);const{fax:a,nom:i,RIB:o,site:d,ville:c,numRC:u,numIF:l,email:m,banque:p,taxPro:g,numCNSS:y,numICE:I,adresse:f,telephone:w,articleIds:v,numPatente:h,description:b,lieuOuvertureBanque:S}=e.body,x=await s.findByIdAndUpdate(e.params.id,{fax:a,nom:i,RIB:o,site:d,ville:c,numRC:u,numIF:l,email:m,banque:p,taxPro:g,numCNSS:y,numICE:I,adresse:f,telephone:w,numPatente:h,description:b,lieuOuvertureBanque:S,articleIds:v||[]},{new:!0});if(!x)return t.status(404).send("la societe avec cet id n'existe pas");t.send(x)})),d.get("/:id",(async(e,t)=>{const n=await s.findById(e.params.id);if(!n)return t.status(404).send("la societe avec cet id n'existe pas");t.send(n)})),d.delete("/:id",[i,o],(async(e,t)=>{const n=await s.findOneAndDelete({_id:e.params.id});if(!n)return t.status(404).send("la societe avec cet id n'existe pas");t.send(n)})),e.exports=d},8058:(e,t,n)=>{const a=n(7252),{UniteMesure:s}=n(6743),i=n(4276),o=n(1987),r=n(473),d=a.Router();d.get("/",(async(e,t)=>{const n=await s.find().sort("nom");t.send(n)})),d.post("/",[i,o],(async(e,t)=>{const{error:n}=r.uniteMesure(e.body);if(n)return t.status(400).send(n.details[0].message);const a=new s({nom:e.body.nom,description:e.body.description});await a.save(),t.send(a)})),d.put("/:id",[i,o],(async(e,t)=>{const{error:n}=r.uniteMesure(e.body);if(n)return t.status(400).send(n.details[0].message);const a=await s.findByIdAndUpdate(e.params.id,{nom:e.body.nom,description:e.body.description},{new:!0});if(!a)return t.status(404).send("uniteMesure avec cet id n'existe pas");t.send(a)})),d.get("/:id",(async(e,t)=>{const n=await s.findById(e.params.id);if(!n)return t.status(404).send("uniteMesure avec cet id n'existe pas");t.send(n)})),d.delete("/:id",[i,o],(async(e,t)=>{const n=await s.findOneAndDelete({_id:e.params.id});if(!n)return t.status(404).send("uniteMesure avec cet id n'existe pas");t.send(n)})),e.exports=d},3079:(e,t,n)=>{const a=n(7252),{UniteReglementaire:s}=n(5712),i=n(4276),o=n(1987),r=n(473),d=a.Router();d.get("/",(async(e,t)=>{const n=await s.find().sort("nom");t.send(n)})),d.post("/",[i,o],(async(e,t)=>{const{error:n}=r.uniteReglementaire(e.body);if(n)return t.status(400).send(n.details[0].message);const a=new s({nom:e.body.nom,description:e.body.description,normeApplicable:e.body.normeApplicable});await a.save(),t.send(a)})),d.put("/:id",[i,o],(async(e,t)=>{const{error:n}=r.uniteReglementaire(e.body);if(n)return t.status(400).send(n.details[0].message);const a=await s.findByIdAndUpdate(e.params.id,{nom:e.body.nom,description:e.body.description,normeApplicable:e.body.normeApplicable},{new:!0});if(!a)return t.status(404).send("uniteReglementaire avec cet id n'existe pas");t.send(a)})),d.get("/:id",(async(e,t)=>{const n=await s.findById(e.params.id);if(!n)return t.status(404).send("uniteReglementaire avec cet id n'existe pas");t.send(n)})),d.delete("/:id",[i,o],(async(e,t)=>{const n=await s.findOneAndDelete({_id:e.params.id});if(!n)return t.status(404).send("uniteReglementaire avec cet id n'existe pas");t.send(n)})),e.exports=d},6495:(e,t,n)=>{const a=n(7252),{Province:s}=n(7784),i=n(4276),o=n(1987),r=n(473),d=a.Router();d.get("/",(async(e,t)=>{const n=await s.find().populate("regionId").sort("code");t.send(n)})),d.post("/",[i,o],(async(e,t)=>{const{error:n}=r.province(e.body);if(n)return t.status(400).send(n.details[0].message);const{code:a,nom:i,regionId:o}=e.body,d=new s({nom:i,code:a,regionId:o||null});await d.save(),t.send(d)})),d.put("/:id",[i,o],(async(e,t)=>{const{error:n}=r.province(e.body);if(n)return t.status(400).send(n.details[0].message);const{code:a,nom:i,regionId:o}=e.body,d=await s.findByIdAndUpdate(e.params.id,{nom:i,code:a,regionId:o||null},{new:!0});if(!d)return t.status(404).send("la province avec cet id n'existe pas");t.send(d)})),d.get("/:id",(async(e,t)=>{const n=await s.findById(e.params.id);if(!n)return t.status(404).send("la province avec cet id n'existe pas");t.send(n)})),d.delete("/:id",[i,o],(async(e,t)=>{const n=await s.findOneAndDelete({_id:e.params.id});if(!n)return t.status(404).send("la province avec cet id n'existe pas");t.send(n)})),e.exports=d},1029:(e,t,n)=>{const a=n(7252),{Rdv:s}=n(3350),{Patient:i}=n(495),o=n(4276),r=n(1987),d=n(473),c=a.Router();c.get("/",(async(e,t)=>{let n={};const a=e.query.date;if(a){const e=1,t=new Date(a);t.setUTCHours(-e,0,0,0);const s=new Date(a);s.setUTCHours(23-e,59,59,999),n.datePrevu={$gte:t,$lte:s}}const i=await s.find(n).populate({path:"patientId",select:"nom prenom telephone"}).populate({path:"deviId",select:"numOrdre"}).populate({path:"acteId",select:"nom"}).sort("datePrevu");t.send(i)})),c.post("/",[o,r],(async(e,t)=>{const{error:n}=d.rdv(e.body);if(n)return t.status(400).send(n.details[0].message);const{patientId:a,newPatient:o,datePrevu:r,description:c,isHonnore:u,heureDebut:l,heureFin:m,lastRdvId:p,natureId:g,acteId:y}=e.body;let I={};if(a&&(I=await i.findById(a),!I))return t.status(400).send("Patient Invalide.");if(o)if(a)I.cin=o.cin,I.nom=o.nom,I.prenom=o.prenom,I.isMasculin=o.isMasculin,I.telephone=o.telephone,I.regionId=o.regionId?o.regionId:void 0,I.provinceId=o.provinceId?o.provinceId:void 0,I.prochainRdv={date:r};else{const{error:e}=d.patient(o);if(e)return t.status(400).send(e.details[0].message);I=new i({cin:o.cin,nom:o.nom,prenom:o.prenom,isMasculin:o.isMasculin,telephone:o.telephone,regionId:o.regionId?o.regionId:I.regionId,provinceId:o.provinceId?o.provinceId:I.provinceId,prochainRdv:{date:r}})}await I.save();const f=new s({patientId:I._id,datePrevu:r,description:c,isHonnore:null===u?void 0:u,heureDebut:l,heureFin:m,lastRdvId:p||void 0,natureId:g||void 0,acteId:y||void 0});await f.save(),t.send(f)})),c.put("/:id",[o,r],(async(e,t)=>{const{error:n}=d.rdv(e.body);if(n)return t.status(400).send(n.details[0].message);const{patientId:a,newPatient:o,datePrevu:r,description:c,isHonnore:u,isAnnule:l,lastRdvId:m,isReporte:p,heureFin:g,heureDebut:y,dateNouveauRdv:I,natureId:f,acteId:w}=e.body;let v=await i.findById(a);if(!v)return t.status(400).send("Patient Invalide.");o&&(v.cin=o.cin,v.nom=o.nom,v.prenom=o.prenom,v.isMasculin=o.isMasculin,v.telephone=o.telephone,v.regionId=o.regionId?o.regionId:void 0,v.provinceId=o.provinceId?o.provinceId:void 0);const h=await s.findByIdAndUpdate(e.params.id,{patientId:a,datePrevu:r,description:c||"",isHonnore:u,isAnnule:l,isReporte:p,lastRdvId:m||void 0,heureFin:g,heureDebut:y,dateNouveauRdv:I,natureId:f||void 0,acteId:w||void 0},{new:!0});if((l||p)&&new Date(v.prochainRdv.date).getFullYear()===new Date(h.datePrevu).getFullYear()&&new Date(v.prochainRdv.date).getMonth()===new Date(h.datePrevu).getMonth()&&new Date(v.prochainRdv.date).getDate()===new Date(h.datePrevu).getDate()&&(v.prochainRdv={date:""}),await v.save(),m){const e=await s.findById(m);new Date(e.datePrevu).getFullYear()===new Date(h.datePrevu).getFullYear()&&new Date(e.datePrevu).getMonth()===new Date(h.datePrevu).getMonth()&&new Date(e.datePrevu).getDate()===new Date(h.datePrevu).getDate()||(e.dateNouveauRdv=h.datePrevu,await e.save())}if(!h)return t.status(404).send("le rdv avec cet id n'existe pas");t.send(h)})),c.get("/:id",(async(e,t)=>{const n=await s.findById(e.params.id).populate({path:"patientId",select:"nom prenom telephone cin isMasculin regionId provinceId"});if(!n)return t.status(404).send("le rdv avec cet id n'existe pas");t.send(n)})),c.delete("/:id",[o,r],(async(e,t)=>{const n=await s.findOneAndDelete({_id:e.params.id});if(!n)return t.status(404).send("le rdv avec cet id n'existe pas");const a=await i.findById(n.patientId);if(!a)return t.status(400).send("Patient Invalide.");new Date(a.prochainRdv.date).getFullYear()===new Date(n.datePrevu).getFullYear()&&new Date(a.prochainRdv.date).getMonth()===new Date(n.datePrevu).getMonth()&&new Date(a.prochainRdv.date).getDate()===new Date(n.datePrevu).getDate()&&(a.prochainRdv={date:""},await a.save()),t.send(n)})),e.exports=c},8675:(e,t,n)=>{const a=n(7252),{Region:s}=n(5748),i=n(4276),o=n(1987),r=n(473),d=a.Router();d.get("/",(async(e,t)=>{const n=await s.find().sort("code");t.send(n)})),d.post("/",[i,o],(async(e,t)=>{const{error:n}=r.region(e.body);if(n)return t.status(400).send(n.details[0].message);const{nom:a,code:i}=e.body,o=new s({nom:a,code:i});await o.save(),t.send(o)})),d.put("/:id",[i,o],(async(e,t)=>{const{error:n}=r.region(e.body);if(n)return t.status(400).send(n.details[0].message);const{nom:a,code:i}=e.body,o=await s.findByIdAndUpdate(e.params.id,{nom:a,code:i},{new:!0});if(!o)return t.status(404).send("l'region avec cet id n'existe pas");t.send(o)})),d.get("/:id",(async(e,t)=>{const n=await s.findById(e.params.id);if(!n)return t.status(404).send("l'étage avec cet id n'existe pas");t.send(n)})),d.delete("/:id",[i,o],(async(e,t)=>{const n=await s.findOneAndDelete({_id:e.params.id});if(!n)return t.status(404).send("l'region avec cet id n'existe pas");t.send(n)})),e.exports=d},5679:(e,t,n)=>{const a=n(7252),{Role:s}=n(8104),i=n(4276),o=n(1987),r=n(473),d=a.Router();d.get("/",(async(e,t)=>{const n=await s.find().sort("nom");t.send(n)})),d.post("/",[i,o],(async(e,t)=>{const{error:n}=r.role(e.body);if(n)return t.status(400).send(n.details[0].message);const a=new s({nom:e.body.nom});await a.save(),t.send(a)})),d.put("/:id",[i,o],(async(e,t)=>{const{error:n}=r.role(e.body);if(n)return t.status(400).send(n.details[0].message);const a=await s.findByIdAndUpdate(e.params.id,{nom:e.body.nom},{new:!0});if(!a)return t.status(404).send("role avec cet id n'existe pas");t.send(a)})),d.get("/:id",(async(e,t)=>{const n=await s.findById(e.params.id);if(!n)return t.status(404).send("role avec cet id n'existe pas");t.send(n)})),d.delete("/:id",[i,o],(async(e,t)=>{const n=await s.findOneAndDelete({_id:e.params.id});if(!n)return t.status(404).send("role avec cet id n'existe pas");t.send(n)})),e.exports=d},1679:(e,t,n)=>{const a=n(7252),{Patient:s}=n(495),i=(n(4276),n(1987),a.Router());i.get("/",(async(e,t)=>{const n=e.query.search;if(!n)return t.status(400).send("Search string is required");const a=await s.find({$or:[{cin:{$regex:n,$options:"i"}},{nom:{$regex:n,$options:"i"}},{prenom:{$regex:n,$options:"i"}}]}).select("nom prenom cin dateNaissance");t.send(a)})),e.exports=i},6411:(e,t,n)=>{const a=n(7252),{SpecialiteMedecin:s}=n(6572),i=n(4276),o=n(1987),r=n(473),d=a.Router();d.get("/",(async(e,t)=>{const n=await s.find().sort("nom");t.send(n)})),d.post("/",[i,o],(async(e,t)=>{const{error:n}=r.specialiteMedecin(e.body);if(n)return t.status(400).send(n.details[0].message);const a=new s({nom:e.body.nom});await a.save(),t.send(a)})),d.put("/:id",[i,o],(async(e,t)=>{const{error:n}=r.specialiteMedecin(e.body);if(n)return t.status(400).send(n.details[0].message);const a=await s.findByIdAndUpdate(e.params.id,{nom:e.body.nom},{new:!0});if(!a)return t.status(404).send("la spécialité avec cet id n'existe pas");t.send(a)})),d.get("/:id",(async(e,t)=>{const n=await s.findById(e.params.id);if(!n)return t.status(404).send("la spécialité avec cet id n'existe pas");t.send(n)})),d.delete("/:id",[i,o],(async(e,t)=>{const n=await s.findOneAndDelete(e.params.id);if(!n)return t.status(404).send("la spécialité avec cet id n'existe pas");t.send(n)})),e.exports=d},126:(e,t,n)=>{n(4276);const a=n(5486),s=n(7825),{User:i}=n(1171),o=n(473),r=n(7252).Router();r.get("/",(async(e,t)=>{const n=await i.find().populate("roleId").sort("nom");t.send(n)})),r.post("/",(async(e,t)=>{const{error:n}=o.user(e.body);if(n)return t.status(400).send(n.details[0].message);let r=await i.findOne({email:e.body.email});if(r)return t.status(400).send("User already registered.");r=new i(s.pick(e.body,["nom","email","password","roleId"]));const d=await a.genSalt(10);r.password=await a.hash(r.password,d),await r.save();const c=r.generateAuthToken();t.header("x-auth-token",c).send(s.pick(r,["_id","email","roleId"]))})),r.put("/:id",(async(e,t)=>{const{error:n}=o.user(e.body);if(n)return t.status(400).send(n.details[0].message);const a=await i.findByIdAndUpdate(e.params.id,{nom:e.body.nom,email:e.body.email,roleId:e.body.roleId},{new:!0});if(!a)return t.status(404).send("user avec cet id n'existe pas");t.send(a)})),r.get("/:id",(async(e,t)=>{const n=await i.findById(e.params.id);if(!n)return t.status(404).send("user avec cet id n'existe pas");t.send(n)})),r.delete("/:id",(async(e,t)=>{const n=await i.findOneAndDelete({_id:e.params.id});if(!n)return t.status(404).send("user avec cet id n'existe pas");t.send(n)})),e.exports=r},2227:(e,t,n)=>{const a=n(6726);e.exports=function(){if(!a.get("jwtPrivateKey"))throw new Error("FATAL ERROR:jwtPrivateKey is not defined.")}},8055:(e,t,n)=>{const a=n(8944),s=n(6037),i=n(6726);e.exports=function(){s.connect(i.get("db")).then((()=>a.info("Connected to MongoDB...")))}},8944:(e,t,n)=>{const{createLogger:a,format:s,transports:i}=n(5124);n(8639),n(5135),process.on("unhandledRejection",(e=>{throw e}));const o=a({level:"verbose",format:s.combine(s.timestamp({format:"YYYY-MM-DD HH:mm:ss"}),s.errors({stack:!0}),s.splat(),s.json()),transports:[new i.File({filename:"./logs/combined.log",level:"verbose"})],transports:[new i.File({filename:"./logs/error.log",level:"error"}),new i.File({filename:"./logs/combined.log"})],exceptionHandlers:[new i.File({filename:"./logs/exceptions.log"}),new i.File({filename:"./logs/combined.log"})],handleExceptions:!0});e.exports=o},1895:(e,t,n)=>{const a=n(2525),s=n(7174);e.exports=function(e){e.use(a()),e.use(s())}},4079:(e,t,n)=>{const a=n(7252),s=n(1029),i=n(9498),o=n(126),r=n(5679),d=n(6908),c=n(9597),u=n(8675),l=n(6710),m=n(9890),p=n(1933),g=n(8042),y=n(6495),I=n(3108),f=n(1881),w=n(2364),v=n(5203),h=n(8975),b=n(8643),S=n(8838),x=n(1042),D=n(6178),C=n(6320),_=n(1679),A=n(4784),R=n(224),O=n(9),q=n(9080),B=n(3761),T=n(8058),P=n(6411),N=n(6615),E=n(8943),j=n(7835),M=n(3079),$=n(9467),k=n(6512),U=n(1752),F=n(6372),L=n(1962),H=n(8577);e.exports=function(e){e.use(H()),e.use(a.json()),e.use("/dentaldoc/auth",i),e.use("/dentaldoc/rdvs",s),e.use("/dentaldoc/devis",c),e.use("/dentaldoc/patients",m),e.use("/dentaldoc/paiements",I),e.use("/dentaldoc/patientslist",S),e.use("/dentaldoc/searchpatient",_),e.use("/dentaldoc/paiementsaccueil",R),e.use("/dentaldoc/lots",f),e.use("/dentaldoc/users",o),e.use("/dentaldoc/roles",r),e.use("/dentaldoc/dents",d),e.use("/dentaldoc/regions",u),e.use("/dentaldoc/medecins",l),e.use("/dentaldoc/cabinets",p),e.use("/dentaldoc/societes",D),e.use("/dentaldoc/articles",x),e.use("/dentaldoc/provinces",y),e.use("/dentaldoc/allergies",g),e.use("/dentaldoc/pathologies",v),e.use("/dentaldoc/medicaments",w),e.use("/dentaldoc/couvertures",h),e.use("/dentaldoc/natureactes",b),e.use("/dentaldoc/boncommandes",O),e.use("/dentaldoc/unitemesures",T),e.use("/dentaldoc/devispaginate",C),e.use("/dentaldoc/actedentaires",A),e.use("/dentaldoc/searchsociete",N),e.use("/dentaldoc/detailcouvertures",q),e.use("/dentaldoc/paiementspaginate",B),e.use("/dentaldoc/specialitemedecins",P),e.use("/dentaldoc/unitereglementaires",M),e.use("/dentaldoc/paiementboncommande",U),e.use("/dentaldoc/articleslistpaginate",$),e.use("/dentaldoc/categoriemedicaments",E),e.use("/dentaldoc/patientslistpaginate",j),e.use("/dentaldoc/boncommandeslistpaginate",k),e.use("/dentaldoc/receptionbcs",F),e.use(L)}},2970:(e,t,n)=>{const a=n(2446);e.exports=function(){a.objectId=n(1263)(a)}},473:(e,t,n)=>{const a=n(2446);e.exports={user:e=>a.object({nom:a.string().min(2).max(50),email:a.string().min(5).max(255).required().email(),password:a.string().min(5).max(255),roleId:a.objectId()}).validate(e),cabinet:e=>a.object({nom:a.string().required()}).validate(e),specialiteMedecin:e=>a.object({nom:a.string().required()}).validate(e),medecin:e=>a.object({nom:a.string().required(),prenom:a.string().allow("")}).validate(e),natureActe:e=>a.object({nom:a.string().required()}).validate(e),acteDentaire:e=>a.object({nom:a.string().required(),natureId:a.objectId().allow(""),code:a.number().allow(""),prix:a.number().allow(""),duree:a.number().allow(""),moments:a.array(),articles:a.array()}).validate(e),dent:e=>a.object({numeroFDI:a.string().required(),description:a.string().allow("")}).validate(e),role:e=>a.object({nom:a.string().required()}).validate(e),lot:e=>a.object({nom:a.string().required()}).validate(e),article:e=>a.object({lotId:a.objectId().allow("").allow(null),code:a.string().required(),nom:a.string().required(),stockInitial:a.number().allow(""),stockAlerte:a.number().allow(""),uniteMesureId:a.objectId().allow(""),uniteReglementaireId:a.objectId().allow(""),prixHT:a.number().allow(""),tauxTVA:a.number().allow(""),images:a.array(),imagesDeletedIndex:a.array(),prixTTC:a.number().allow(""),isExpiration:a.boolean().allow("")}).validate(e),patient:e=>a.object({nom:a.string().required(),prenom:a.string().required(),cin:a.string().allow("").allow(null),isMasculin:a.boolean().allow("").allow(null),dateRecu:a.date().allow(""),numOrdre:a.number().allow(""),historiqueMedecins:a.array(),numDossier:a.string(),profession:a.string().allow(""),dateNaissance:a.date().allow("").allow(null),images:a.array(),imagesDeletedIndex:a.array(),telephone:a.string().allow(""),ville:a.string().allow("").allow(null),provinceId:a.objectId().allow("").allow(null),regionId:a.objectId().allow("").allow(null),prochainRdv:a.object(),couvertureId:a.objectId().allow("").allow(null),medicamentIds:a.array(),pathologieIds:a.array(),allergieIds:a.array(),detailCouvertureId:a.objectId().allow("").allow(null),dateDerniereVisite:a.date().allow("").allow(null),deviIds:a.array(),paiementIds:a.array(),report:a.object(),montantAPayer:a.number().allow(null),montantPaye:a.number().allow(null),balance:a.number().allow(null)}).validate(e),devi:e=>a.object({patientId:a.objectId().allow("").allow(null),newPatient:a.object(),numOrdre:a.number().allow(null).allow(""),medecinId:a.objectId().required(),dateDevi:a.date(),images:a.array(),imagesDeletedIndex:a.array(),montant:a.number().allow("").allow(null),rdvIds:a.array(),articles:a.array(),acteEffectues:a.array()}).validate(e),paiement:e=>a.object({numOrdre:a.number().allow(null).allow(""),patientId:a.objectId().required(),mode:a.string().valid("Chèque","Espèce"),numCheque:a.string().allow(""),date:a.date(),montant:a.number().required()}).validate(e),uniteMesure:e=>a.object({nom:a.string().required(),description:a.string().allow("")}).validate(e),uniteReglementaire:e=>a.object({nom:a.string().required(),description:a.string().allow(""),normeApplicable:a.string().allow("")}).validate(e),societe:e=>a.object({nom:a.string().required(),telephone:a.string().allow(""),adresse:a.string().allow(""),ville:a.string().allow(""),banque:a.string().allow(""),lieuOuvertureBanque:a.string().allow(""),RIB:a.string().allow(""),numPatente:a.string().allow(""),numRC:a.string().allow(""),numIF:a.string().allow(""),numCNSS:a.string().allow(""),numICE:a.string().allow(""),email:a.string().allow(""),fax:a.string().allow(""),taxPro:a.string().allow(""),site:a.string().allow(""),description:a.string().allow(""),articleIds:a.array()}).validate(e),rdv:e=>a.object({patientId:a.objectId().allow("").allow(null),newPatient:a.object(),datePrevu:a.date().required(),description:a.string().allow(""),isHonnore:a.boolean().allow(null),isAnnule:a.boolean().allow(null),isReporte:a.boolean().allow(null),dateNouveauRdv:a.date().allow(null).allow(""),deviId:a.objectId().allow(null).allow(""),natureId:a.objectId().allow(null).allow(""),acteId:a.objectId().allow(null).allow(""),lastRdvId:a.objectId().allow(null).allow(""),heureDebut:a.object(),heureFin:a.object(),__v:a.number()}).validate(e),bonCommande:e=>a.object({numOrdre:a.string().allow(""),date:a.date().allow(""),statut:a.string().allow(""),objet:a.string().allow(""),societeRetenuId:a.objectId().allow(""),montantHT:a.number().allow("").allow(null),tva:a.number().allow(""),montantTTC:a.number().allow("").allow(null),commentaire:a.string().allow(""),articles:a.array(),paiementIds:a.array(),isPayed:a.boolean().allow(""),images:a.array(),imagesDeletedIndex:a.array()}).validate(e),paiementBonCommande:e=>a.object({date:a.date().required(),montant:a.number().required(),bonCommandeId:a.objectId().required(),modePaiement:a.string().allow(""),numCheque:a.string().allow(""),banque:a.string().allow(""),commentaire:a.string().allow(""),images:a.array(),imagesDeletedIndex:a.array()}).validate(e),receptionBonCommande:e=>a.object({date:a.date().allow(""),numOrdre:a.string().allow(""),bonCommandeId:a.objectId().required(),articles:a.array(),commentaire:a.string().allow(""),isLast:a.boolean().allow(""),images:a.array(),imagesDeletedIndex:a.array()}).validate(e),province:e=>a.object({nom:a.string().required(),code:a.string().allow("").allow(null),regionId:a.objectId().allow("").allow(null)}).validate(e),region:e=>a.object({nom:a.string().required(),code:a.number().allow("").allow(null)}).validate(e),couverture:e=>a.object({nom:a.string().required(),detailCouvertureIds:a.array()}).validate(e),detailCouverture:e=>a.object({nom:a.string().required(),couvertureId:a.objectId().required()}).validate(e),medicament:e=>a.object({nom:a.string().required(),categorieId:a.objectId().allow(""),description:a.string().allow("")}).validate(e),categorieMedicament:e=>a.object({nom:a.string().required()}).validate(e),allergie:e=>a.object({nom:a.string().required()}).validate(e),pathologie:e=>a.object({nom:a.string().required(),description:a.string().allow(""),considerationsSpeciales:a.string().allow("")}).validate(e)}},1912:(e,t,n)=>{const a=n(9896),s=n(9288),i=n(6928);e.exports=compressImage=e=>{e.map((async e=>{await s(e.path).png({palette:!0}).toFile(i.resolve(e.destination,"compressed",e.filename)),a.unlinkSync(e.path)}))}},5486:e=>{"use strict";e.exports=require("bcrypt")},7174:e=>{"use strict";e.exports=require("compression")},6726:e=>{"use strict";e.exports=require("config")},8577:e=>{"use strict";e.exports=require("cors")},818:e=>{"use strict";e.exports=require("dotenv")},7252:e=>{"use strict";e.exports=require("express")},5135:e=>{"use strict";e.exports=require("express-async-errors")},2525:e=>{"use strict";e.exports=require("helmet")},2446:e=>{"use strict";e.exports=require("joi")},1263:e=>{"use strict";e.exports=require("joi-objectid")},829:e=>{"use strict";e.exports=require("jsonwebtoken")},7825:e=>{"use strict";e.exports=require("lodash")},6037:e=>{"use strict";e.exports=require("mongoose")},8461:e=>{"use strict";e.exports=require("multer")},9288:e=>{"use strict";e.exports=require("sharp")},2460:e=>{"use strict";e.exports=require("util")},5124:e=>{"use strict";e.exports=require("winston")},8639:e=>{"use strict";e.exports=require("winston-mongodb")},9896:e=>{"use strict";e.exports=require("fs")},6928:e=>{"use strict";e.exports=require("path")}},t={};!function n(a){var s=t[a];if(void 0!==s)return s.exports;var i=t[a]={exports:{}};return e[a](i,i.exports,n),i.exports}(2987)})();